<?xml version="1.0" encoding="UTF-8"?>
<ttFont sfntVersion="\x00\x01\x00\x00" ttLibVersion="4.58">

  <GlyphOrder>
    <!-- The 'id' attribute is only for humans; it is ignored when parsed. -->
    <GlyphID id="0" name=".notdef"/>
    <GlyphID id="1" name="space"/>
    <GlyphID id="2" name="exclam"/>
    <GlyphID id="3" name="quotedbl"/>
    <GlyphID id="4" name="quotesingle"/>
    <GlyphID id="5" name="comma"/>
    <GlyphID id="6" name="period"/>
    <GlyphID id="7" name="A"/>
    <GlyphID id="8" name="B"/>
    <GlyphID id="9" name="C"/>
    <GlyphID id="10" name="D"/>
    <GlyphID id="11" name="E"/>
    <GlyphID id="12" name="F"/>
    <GlyphID id="13" name="G"/>
    <GlyphID id="14" name="H"/>
    <GlyphID id="15" name="I"/>
    <GlyphID id="16" name="J"/>
    <GlyphID id="17" name="K"/>
    <GlyphID id="18" name="L"/>
    <GlyphID id="19" name="M"/>
    <GlyphID id="20" name="N"/>
    <GlyphID id="21" name="O"/>
    <GlyphID id="22" name="P"/>
    <GlyphID id="23" name="Q"/>
    <GlyphID id="24" name="R"/>
    <GlyphID id="25" name="S"/>
    <GlyphID id="26" name="T"/>
    <GlyphID id="27" name="U"/>
    <GlyphID id="28" name="V"/>
    <GlyphID id="29" name="W"/>
    <GlyphID id="30" name="X"/>
    <GlyphID id="31" name="Y"/>
    <GlyphID id="32" name="Z"/>
    <GlyphID id="33" name="a"/>
    <GlyphID id="34" name="b"/>
    <GlyphID id="35" name="c"/>
    <GlyphID id="36" name="d"/>
    <GlyphID id="37" name="e"/>
    <GlyphID id="38" name="f"/>
    <GlyphID id="39" name="g"/>
    <GlyphID id="40" name="h"/>
    <GlyphID id="41" name="i"/>
    <GlyphID id="42" name="j"/>
    <GlyphID id="43" name="k"/>
    <GlyphID id="44" name="l"/>
    <GlyphID id="45" name="m"/>
    <GlyphID id="46" name="n"/>
    <GlyphID id="47" name="o"/>
    <GlyphID id="48" name="p"/>
    <GlyphID id="49" name="q"/>
    <GlyphID id="50" name="r"/>
    <GlyphID id="51" name="s"/>
    <GlyphID id="52" name="t"/>
    <GlyphID id="53" name="u"/>
    <GlyphID id="54" name="v"/>
    <GlyphID id="55" name="w"/>
    <GlyphID id="56" name="x"/>
    <GlyphID id="57" name="y"/>
    <GlyphID id="58" name="z"/>
    <GlyphID id="59" name="question"/>
  </GlyphOrder>

  <head>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="1.0"/>
    <fontRevision value="1.0"/>
    <checkSumAdjustment value="0x105b2b78"/>
    <magicNumber value="0x5f0f3cf5"/>
    <flags value="00000000 00001111"/>
    <unitsPerEm value="2048"/>
    <created value="Thu Mar 23 22:57:13 2023"/>
    <modified value="Thu Mar 23 23:31:00 2023"/>
    <xMin value="0"/>
    <yMin value="-429"/>
    <xMax value="1899"/>
    <yMax value="1715"/>
    <macStyle value="00000000 00000000"/>
    <lowestRecPPEM value="6"/>
    <fontDirectionHint value="2"/>
    <indexToLocFormat value="0"/>
    <glyphDataFormat value="0"/>
  </head>

  <hhea>
    <tableVersion value="0x00010000"/>
    <ascent value="1716"/>
    <descent value="-430"/>
    <lineGap value="0"/>
    <advanceWidthMax value="1933"/>
    <minLeftSideBearing value="0"/>
    <minRightSideBearing value="-21"/>
    <xMaxExtent value="1899"/>
    <caretSlopeRise value="1"/>
    <caretSlopeRun value="0"/>
    <caretOffset value="0"/>
    <reserved0 value="0"/>
    <reserved1 value="0"/>
    <reserved2 value="0"/>
    <reserved3 value="0"/>
    <metricDataFormat value="0"/>
    <numberOfHMetrics value="60"/>
  </hhea>

  <maxp>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="0x10000"/>
    <numGlyphs value="60"/>
    <maxPoints value="228"/>
    <maxContours value="15"/>
    <maxCompositePoints value="0"/>
    <maxCompositeContours value="0"/>
    <maxZones value="2"/>
    <maxTwilightPoints value="132"/>
    <maxStorage value="222"/>
    <maxFunctionDefs value="141"/>
    <maxInstructionDefs value="0"/>
    <maxStackElements value="347"/>
    <maxSizeOfInstructions value="3596"/>
    <maxComponentElements value="0"/>
    <maxComponentDepth value="0"/>
  </maxp>

  <OS_2>
    <!-- The fields 'usFirstCharIndex' and 'usLastCharIndex'
         will be recalculated by the compiler -->
    <version value="4"/>
    <xAvgCharWidth value="880"/>
    <usWeightClass value="400"/>
    <usWidthClass value="5"/>
    <fsType value="00000000 00000000"/>
    <ySubscriptXSize value="1434"/>
    <ySubscriptYSize value="1331"/>
    <ySubscriptXOffset value="0"/>
    <ySubscriptYOffset value="307"/>
    <ySuperscriptXSize value="1434"/>
    <ySuperscriptYSize value="1331"/>
    <ySuperscriptXOffset value="0"/>
    <ySuperscriptYOffset value="922"/>
    <yStrikeoutSize value="102"/>
    <yStrikeoutPosition value="718"/>
    <sFamilyClass value="0"/>
    <panose>
      <bFamilyType value="2"/>
      <bSerifStyle value="0"/>
      <bWeight value="5"/>
      <bProportion value="0"/>
      <bContrast value="0"/>
      <bStrokeVariation value="0"/>
      <bArmStyle value="0"/>
      <bLetterForm value="0"/>
      <bMidline value="0"/>
      <bXHeight value="0"/>
    </panose>
    <ulUnicodeRange1 value="00000000 00000000 00000000 00000011"/>
    <ulUnicodeRange2 value="00000000 00000000 00000000 00000000"/>
    <ulUnicodeRange3 value="00000000 00000000 00000000 00000000"/>
    <ulUnicodeRange4 value="00000000 00000000 00000000 00000000"/>
    <achVendID value="FM  "/>
    <fsSelection value="00000001 11000000"/>
    <usFirstCharIndex value="32"/>
    <usLastCharIndex value="160"/>
    <sTypoAscender value="1716"/>
    <sTypoDescender value="-430"/>
    <sTypoLineGap value="0"/>
    <usWinAscent value="1716"/>
    <usWinDescent value="430"/>
    <ulCodePageRange1 value="00000000 00000000 00000000 00000001"/>
    <ulCodePageRange2 value="00000000 00000000 00000000 00000000"/>
    <sxHeight value="1435"/>
    <sCapHeight value="1435"/>
    <usDefaultChar value="0"/>
    <usBreakChar value="32"/>
    <usMaxContext value="2"/>
  </OS_2>

  <hmtx>
    <mtx name=".notdef" width="1933" lsb="55"/>
    <mtx name="A" width="900" lsb="0"/>
    <mtx name="B" width="879" lsb="0"/>
    <mtx name="C" width="859" lsb="0"/>
    <mtx name="D" width="886" lsb="0"/>
    <mtx name="E" width="859" lsb="0"/>
    <mtx name="F" width="849" lsb="0"/>
    <mtx name="G" width="869" lsb="0"/>
    <mtx name="H" width="865" lsb="0"/>
    <mtx name="I" width="417" lsb="0"/>
    <mtx name="J" width="828" lsb="48"/>
    <mtx name="K" width="879" lsb="0"/>
    <mtx name="L" width="880" lsb="0"/>
    <mtx name="M" width="1265" lsb="0"/>
    <mtx name="N" width="1006" lsb="0"/>
    <mtx name="O" width="911" lsb="0"/>
    <mtx name="P" width="865" lsb="0"/>
    <mtx name="Q" width="903" lsb="0"/>
    <mtx name="R" width="943" lsb="0"/>
    <mtx name="S" width="926" lsb="0"/>
    <mtx name="T" width="1165" lsb="67"/>
    <mtx name="U" width="883" lsb="0"/>
    <mtx name="V" width="887" lsb="0"/>
    <mtx name="W" width="1364" lsb="0"/>
    <mtx name="X" width="895" lsb="0"/>
    <mtx name="Y" width="893" lsb="0"/>
    <mtx name="Z" width="780" lsb="0"/>
    <mtx name="a" width="900" lsb="0"/>
    <mtx name="b" width="879" lsb="0"/>
    <mtx name="c" width="859" lsb="0"/>
    <mtx name="comma" width="413" lsb="78"/>
    <mtx name="d" width="886" lsb="0"/>
    <mtx name="e" width="859" lsb="0"/>
    <mtx name="exclam" width="395" lsb="78"/>
    <mtx name="f" width="849" lsb="0"/>
    <mtx name="g" width="869" lsb="0"/>
    <mtx name="h" width="865" lsb="0"/>
    <mtx name="i" width="417" lsb="0"/>
    <mtx name="j" width="828" lsb="48"/>
    <mtx name="k" width="879" lsb="0"/>
    <mtx name="l" width="880" lsb="0"/>
    <mtx name="m" width="1265" lsb="0"/>
    <mtx name="n" width="1006" lsb="0"/>
    <mtx name="o" width="911" lsb="0"/>
    <mtx name="p" width="865" lsb="0"/>
    <mtx name="period" width="339" lsb="35"/>
    <mtx name="q" width="903" lsb="0"/>
    <mtx name="question" width="918" lsb="0"/>
    <mtx name="quotedbl" width="672" lsb="101"/>
    <mtx name="quotesingle" width="346" lsb="52"/>
    <mtx name="r" width="943" lsb="0"/>
    <mtx name="s" width="926" lsb="0"/>
    <mtx name="space" width="508" lsb="0"/>
    <mtx name="t" width="1165" lsb="67"/>
    <mtx name="u" width="883" lsb="0"/>
    <mtx name="v" width="887" lsb="0"/>
    <mtx name="w" width="1364" lsb="0"/>
    <mtx name="x" width="895" lsb="0"/>
    <mtx name="y" width="893" lsb="0"/>
    <mtx name="z" width="780" lsb="0"/>
  </hmtx>

  <cmap>
    <tableVersion version="0"/>
    <cmap_format_4 platformID="0" platEncID="3" language="0">
      <map code="0x20" name="space"/><!-- SPACE -->
      <map code="0x21" name="exclam"/><!-- EXCLAMATION MARK -->
      <map code="0x22" name="quotedbl"/><!-- QUOTATION MARK -->
      <map code="0x27" name="quotesingle"/><!-- APOSTROPHE -->
      <map code="0x2c" name="comma"/><!-- COMMA -->
      <map code="0x2e" name="period"/><!-- FULL STOP -->
      <map code="0x3f" name="question"/><!-- QUESTION MARK -->
      <map code="0x41" name="A"/><!-- LATIN CAPITAL LETTER A -->
      <map code="0x42" name="B"/><!-- LATIN CAPITAL LETTER B -->
      <map code="0x43" name="C"/><!-- LATIN CAPITAL LETTER C -->
      <map code="0x44" name="D"/><!-- LATIN CAPITAL LETTER D -->
      <map code="0x45" name="E"/><!-- LATIN CAPITAL LETTER E -->
      <map code="0x46" name="F"/><!-- LATIN CAPITAL LETTER F -->
      <map code="0x47" name="G"/><!-- LATIN CAPITAL LETTER G -->
      <map code="0x48" name="H"/><!-- LATIN CAPITAL LETTER H -->
      <map code="0x49" name="I"/><!-- LATIN CAPITAL LETTER I -->
      <map code="0x4a" name="J"/><!-- LATIN CAPITAL LETTER J -->
      <map code="0x4b" name="K"/><!-- LATIN CAPITAL LETTER K -->
      <map code="0x4c" name="L"/><!-- LATIN CAPITAL LETTER L -->
      <map code="0x4d" name="M"/><!-- LATIN CAPITAL LETTER M -->
      <map code="0x4e" name="N"/><!-- LATIN CAPITAL LETTER N -->
      <map code="0x4f" name="O"/><!-- LATIN CAPITAL LETTER O -->
      <map code="0x50" name="P"/><!-- LATIN CAPITAL LETTER P -->
      <map code="0x51" name="Q"/><!-- LATIN CAPITAL LETTER Q -->
      <map code="0x52" name="R"/><!-- LATIN CAPITAL LETTER R -->
      <map code="0x53" name="S"/><!-- LATIN CAPITAL LETTER S -->
      <map code="0x54" name="T"/><!-- LATIN CAPITAL LETTER T -->
      <map code="0x55" name="U"/><!-- LATIN CAPITAL LETTER U -->
      <map code="0x56" name="V"/><!-- LATIN CAPITAL LETTER V -->
      <map code="0x57" name="W"/><!-- LATIN CAPITAL LETTER W -->
      <map code="0x58" name="X"/><!-- LATIN CAPITAL LETTER X -->
      <map code="0x59" name="Y"/><!-- LATIN CAPITAL LETTER Y -->
      <map code="0x5a" name="Z"/><!-- LATIN CAPITAL LETTER Z -->
      <map code="0x61" name="a"/><!-- LATIN SMALL LETTER A -->
      <map code="0x62" name="b"/><!-- LATIN SMALL LETTER B -->
      <map code="0x63" name="c"/><!-- LATIN SMALL LETTER C -->
      <map code="0x64" name="d"/><!-- LATIN SMALL LETTER D -->
      <map code="0x65" name="e"/><!-- LATIN SMALL LETTER E -->
      <map code="0x66" name="f"/><!-- LATIN SMALL LETTER F -->
      <map code="0x67" name="g"/><!-- LATIN SMALL LETTER G -->
      <map code="0x68" name="h"/><!-- LATIN SMALL LETTER H -->
      <map code="0x69" name="i"/><!-- LATIN SMALL LETTER I -->
      <map code="0x6a" name="j"/><!-- LATIN SMALL LETTER J -->
      <map code="0x6b" name="k"/><!-- LATIN SMALL LETTER K -->
      <map code="0x6c" name="l"/><!-- LATIN SMALL LETTER L -->
      <map code="0x6d" name="m"/><!-- LATIN SMALL LETTER M -->
      <map code="0x6e" name="n"/><!-- LATIN SMALL LETTER N -->
      <map code="0x6f" name="o"/><!-- LATIN SMALL LETTER O -->
      <map code="0x70" name="p"/><!-- LATIN SMALL LETTER P -->
      <map code="0x71" name="q"/><!-- LATIN SMALL LETTER Q -->
      <map code="0x72" name="r"/><!-- LATIN SMALL LETTER R -->
      <map code="0x73" name="s"/><!-- LATIN SMALL LETTER S -->
      <map code="0x74" name="t"/><!-- LATIN SMALL LETTER T -->
      <map code="0x75" name="u"/><!-- LATIN SMALL LETTER U -->
      <map code="0x76" name="v"/><!-- LATIN SMALL LETTER V -->
      <map code="0x77" name="w"/><!-- LATIN SMALL LETTER W -->
      <map code="0x78" name="x"/><!-- LATIN SMALL LETTER X -->
      <map code="0x79" name="y"/><!-- LATIN SMALL LETTER Y -->
      <map code="0x7a" name="z"/><!-- LATIN SMALL LETTER Z -->
      <map code="0xa0" name="space"/><!-- NO-BREAK SPACE -->
    </cmap_format_4>
    <cmap_format_4 platformID="3" platEncID="1" language="0">
      <map code="0x20" name="space"/><!-- SPACE -->
      <map code="0x21" name="exclam"/><!-- EXCLAMATION MARK -->
      <map code="0x22" name="quotedbl"/><!-- QUOTATION MARK -->
      <map code="0x27" name="quotesingle"/><!-- APOSTROPHE -->
      <map code="0x2c" name="comma"/><!-- COMMA -->
      <map code="0x2e" name="period"/><!-- FULL STOP -->
      <map code="0x3f" name="question"/><!-- QUESTION MARK -->
      <map code="0x41" name="A"/><!-- LATIN CAPITAL LETTER A -->
      <map code="0x42" name="B"/><!-- LATIN CAPITAL LETTER B -->
      <map code="0x43" name="C"/><!-- LATIN CAPITAL LETTER C -->
      <map code="0x44" name="D"/><!-- LATIN CAPITAL LETTER D -->
      <map code="0x45" name="E"/><!-- LATIN CAPITAL LETTER E -->
      <map code="0x46" name="F"/><!-- LATIN CAPITAL LETTER F -->
      <map code="0x47" name="G"/><!-- LATIN CAPITAL LETTER G -->
      <map code="0x48" name="H"/><!-- LATIN CAPITAL LETTER H -->
      <map code="0x49" name="I"/><!-- LATIN CAPITAL LETTER I -->
      <map code="0x4a" name="J"/><!-- LATIN CAPITAL LETTER J -->
      <map code="0x4b" name="K"/><!-- LATIN CAPITAL LETTER K -->
      <map code="0x4c" name="L"/><!-- LATIN CAPITAL LETTER L -->
      <map code="0x4d" name="M"/><!-- LATIN CAPITAL LETTER M -->
      <map code="0x4e" name="N"/><!-- LATIN CAPITAL LETTER N -->
      <map code="0x4f" name="O"/><!-- LATIN CAPITAL LETTER O -->
      <map code="0x50" name="P"/><!-- LATIN CAPITAL LETTER P -->
      <map code="0x51" name="Q"/><!-- LATIN CAPITAL LETTER Q -->
      <map code="0x52" name="R"/><!-- LATIN CAPITAL LETTER R -->
      <map code="0x53" name="S"/><!-- LATIN CAPITAL LETTER S -->
      <map code="0x54" name="T"/><!-- LATIN CAPITAL LETTER T -->
      <map code="0x55" name="U"/><!-- LATIN CAPITAL LETTER U -->
      <map code="0x56" name="V"/><!-- LATIN CAPITAL LETTER V -->
      <map code="0x57" name="W"/><!-- LATIN CAPITAL LETTER W -->
      <map code="0x58" name="X"/><!-- LATIN CAPITAL LETTER X -->
      <map code="0x59" name="Y"/><!-- LATIN CAPITAL LETTER Y -->
      <map code="0x5a" name="Z"/><!-- LATIN CAPITAL LETTER Z -->
      <map code="0x61" name="a"/><!-- LATIN SMALL LETTER A -->
      <map code="0x62" name="b"/><!-- LATIN SMALL LETTER B -->
      <map code="0x63" name="c"/><!-- LATIN SMALL LETTER C -->
      <map code="0x64" name="d"/><!-- LATIN SMALL LETTER D -->
      <map code="0x65" name="e"/><!-- LATIN SMALL LETTER E -->
      <map code="0x66" name="f"/><!-- LATIN SMALL LETTER F -->
      <map code="0x67" name="g"/><!-- LATIN SMALL LETTER G -->
      <map code="0x68" name="h"/><!-- LATIN SMALL LETTER H -->
      <map code="0x69" name="i"/><!-- LATIN SMALL LETTER I -->
      <map code="0x6a" name="j"/><!-- LATIN SMALL LETTER J -->
      <map code="0x6b" name="k"/><!-- LATIN SMALL LETTER K -->
      <map code="0x6c" name="l"/><!-- LATIN SMALL LETTER L -->
      <map code="0x6d" name="m"/><!-- LATIN SMALL LETTER M -->
      <map code="0x6e" name="n"/><!-- LATIN SMALL LETTER N -->
      <map code="0x6f" name="o"/><!-- LATIN SMALL LETTER O -->
      <map code="0x70" name="p"/><!-- LATIN SMALL LETTER P -->
      <map code="0x71" name="q"/><!-- LATIN SMALL LETTER Q -->
      <map code="0x72" name="r"/><!-- LATIN SMALL LETTER R -->
      <map code="0x73" name="s"/><!-- LATIN SMALL LETTER S -->
      <map code="0x74" name="t"/><!-- LATIN SMALL LETTER T -->
      <map code="0x75" name="u"/><!-- LATIN SMALL LETTER U -->
      <map code="0x76" name="v"/><!-- LATIN SMALL LETTER V -->
      <map code="0x77" name="w"/><!-- LATIN SMALL LETTER W -->
      <map code="0x78" name="x"/><!-- LATIN SMALL LETTER X -->
      <map code="0x79" name="y"/><!-- LATIN SMALL LETTER Y -->
      <map code="0x7a" name="z"/><!-- LATIN SMALL LETTER Z -->
      <map code="0xa0" name="space"/><!-- NO-BREAK SPACE -->
    </cmap_format_4>
  </cmap>

  <fpgm>
    <assembly>
      PUSHB[ ]	/* 1 value pushed */
      0
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        NEQ[ ]	/* NotEqual */
        IF[ ]	/* If */
          RCVT[ ]	/* ReadCVT */
        EIF[ ]	/* EndIf */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MPPEM[ ]	/* MeasurePixelPerEm */
        PUSHW[ ]	/* 1 value pushed */
        14
        LTEQ[ ]	/* LessThenOrEqual */
        MPPEM[ ]	/* MeasurePixelPerEm */
        PUSHB[ ]	/* 1 value pushed */
        6
        GTEQ[ ]	/* GreaterThanOrEqual */
        AND[ ]	/* LogicalAnd */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          52
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          40
        EIF[ ]	/* EndIf */
        ADD[ ]	/* Add */
        FLOOR[ ]	/* Floor */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        NEQ[ ]	/* NotEqual */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          SUB[ ]	/* Subtract */
          PUSHW[ ]	/* 2 values pushed */
          2048 2048
          MUL[ ]	/* Multiply */
          MUL[ ]	/* Multiply */
          SWAP[ ]	/* SwapTopStack */
          DIV[ ]	/* Divide */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        0
        RS[ ]	/* ReadStore */
        SWAP[ ]	/* SwapTopStack */
        WCVTP[ ]	/* WriteCVTInPixels */
        PUSHB[ ]	/* 3 values pushed */
        0 1 0
        RS[ ]	/* ReadStore */
        ADD[ ]	/* Add */
        WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      1
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        32
        ADD[ ]	/* Add */
        FLOOR[ ]	/* Floor */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      2
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        POP[ ]	/* PopTopStack */
        SWAP[ ]	/* SwapTopStack */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      3
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        ABS[ ]	/* Absolute */
        PUSHB[ ]	/* 4 values pushed */
        3 20 21 0
        WS[ ]	/* WriteStore */
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 1 value pushed */
        19
        RS[ ]	/* ReadStore */
        DUP[ ]	/* DuplicateTopStack */
        ADD[ ]	/* Add */
        ADD[ ]	/* Add */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 2 values pushed */
        2 20
        RS[ ]	/* ReadStore */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 2 values pushed */
        37 3
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        EQ[ ]	/* Equal */
        JROT[ ]	/* JumpRelativeOnTrue */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        12
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        RS[ ]	/* ReadStore */
        SUB[ ]	/* Subtract */
        ABS[ ]	/* Absolute */
        PUSHB[ ]	/* 1 value pushed */
        4
        LT[ ]	/* LessThan */
        JROT[ ]	/* JumpRelativeOnTrue */
        PUSHB[ ]	/* 3 values pushed */
        2 2 2
        RS[ ]	/* ReadStore */
        ADD[ ]	/* Add */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        33
        NEG[ ]	/* Negate */
        JMPR[ ]	/* Jump */
        POP[ ]	/* PopTopStack */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 3 values pushed */
        14 21 1
        WS[ ]	/* WriteStore */
        JMPR[ ]	/* Jump */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 3 values pushed */
        19 1 19
        RS[ ]	/* ReadStore */
        ADD[ ]	/* Add */
        WS[ ]	/* WriteStore */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          NEG[ ]	/* Negate */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 3 values pushed */
        22 1 2
        RS[ ]	/* ReadStore */
        ADD[ ]	/* Add */
        WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      4
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        3
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        21
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          22
          RS[ ]	/* ReadStore */
          RS[ ]	/* ReadStore */
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NEG[ ]	/* Negate */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          DUP[ ]	/* DuplicateTopStack */
          ABS[ ]	/* Absolute */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          192
          LT[ ]	/* LessThan */
          PUSHB[ ]	/* 1 value pushed */
          4
          MINDEX[ ]	/* MoveXToTopStack */
          AND[ ]	/* LogicalAnd */
          PUSHB[ ]	/* 3 values pushed */
          40 1 13
          RS[ ]	/* ReadStore */
          RCVT[ ]	/* ReadCVT */
          MUL[ ]	/* Multiply */
          RCVT[ ]	/* ReadCVT */
          PUSHB[ ]	/* 1 value pushed */
          6
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            PUSHB[ ]	/* 1 value pushed */
            3
            CINDEX[ ]	/* CopyXToTopStack */
          EIF[ ]	/* EndIf */
          GT[ ]	/* GreaterThan */
          OR[ ]	/* LogicalOr */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
            SWAP[ ]	/* SwapTopStack */
            POP[ ]	/* PopTopStack */
          ELSE[ ]	/* Else */
            ROLL[ ]	/* RollTopThreeStack */
            IF[ ]	/* If */
              DUP[ ]	/* DuplicateTopStack */
              PUSHB[ ]	/* 1 value pushed */
              80
              LT[ ]	/* LessThan */
              IF[ ]	/* If */
                POP[ ]	/* PopTopStack */
                PUSHB[ ]	/* 1 value pushed */
                64
              EIF[ ]	/* EndIf */
            ELSE[ ]	/* Else */
              DUP[ ]	/* DuplicateTopStack */
              PUSHB[ ]	/* 1 value pushed */
              56
              LT[ ]	/* LessThan */
              IF[ ]	/* If */
                POP[ ]	/* PopTopStack */
                PUSHB[ ]	/* 1 value pushed */
                56
              EIF[ ]	/* EndIf */
            EIF[ ]	/* EndIf */
            DUP[ ]	/* DuplicateTopStack */
            PUSHB[ ]	/* 2 values pushed */
            1 13
            RS[ ]	/* ReadStore */
            RCVT[ ]	/* ReadCVT */
            MUL[ ]	/* Multiply */
            RCVT[ ]	/* ReadCVT */
            SUB[ ]	/* Subtract */
            ABS[ ]	/* Absolute */
            PUSHB[ ]	/* 1 value pushed */
            40
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              POP[ ]	/* PopTopStack */
              PUSHB[ ]	/* 2 values pushed */
              1 13
              RS[ ]	/* ReadStore */
              RCVT[ ]	/* ReadCVT */
              MUL[ ]	/* Multiply */
              RCVT[ ]	/* ReadCVT */
              DUP[ ]	/* DuplicateTopStack */
              PUSHB[ ]	/* 1 value pushed */
              48
              LT[ ]	/* LessThan */
              IF[ ]	/* If */
                POP[ ]	/* PopTopStack */
                PUSHB[ ]	/* 1 value pushed */
                48
              EIF[ ]	/* EndIf */
            ELSE[ ]	/* Else */
              DUP[ ]	/* DuplicateTopStack */
              PUSHB[ ]	/* 1 value pushed */
              192
              LT[ ]	/* LessThan */
              IF[ ]	/* If */
                DUP[ ]	/* DuplicateTopStack */
                FLOOR[ ]	/* Floor */
                DUP[ ]	/* DuplicateTopStack */
                ROLL[ ]	/* RollTopThreeStack */
                ROLL[ ]	/* RollTopThreeStack */
                SUB[ ]	/* Subtract */
                DUP[ ]	/* DuplicateTopStack */
                PUSHB[ ]	/* 1 value pushed */
                10
                LT[ ]	/* LessThan */
                IF[ ]	/* If */
                  ADD[ ]	/* Add */
                ELSE[ ]	/* Else */
                  DUP[ ]	/* DuplicateTopStack */
                  PUSHB[ ]	/* 1 value pushed */
                  32
                  LT[ ]	/* LessThan */
                  IF[ ]	/* If */
                    POP[ ]	/* PopTopStack */
                    PUSHB[ ]	/* 1 value pushed */
                    10
                    ADD[ ]	/* Add */
                  ELSE[ ]	/* Else */
                    DUP[ ]	/* DuplicateTopStack */
                    PUSHB[ ]	/* 1 value pushed */
                    54
                    LT[ ]	/* LessThan */
                    IF[ ]	/* If */
                      POP[ ]	/* PopTopStack */
                      PUSHB[ ]	/* 1 value pushed */
                      54
                      ADD[ ]	/* Add */
                    ELSE[ ]	/* Else */
                      ADD[ ]	/* Add */
                    EIF[ ]	/* EndIf */
                  EIF[ ]	/* EndIf */
                EIF[ ]	/* EndIf */
              ELSE[ ]	/* Else */
                PUSHB[ ]	/* 1 value pushed */
                2
                CINDEX[ ]	/* CopyXToTopStack */
                PUSHB[ ]	/* 1 value pushed */
                12
                RS[ ]	/* ReadStore */
                MUL[ ]	/* Multiply */
                PUSHB[ ]	/* 1 value pushed */
                0
                GT[ ]	/* GreaterThan */
                IF[ ]	/* If */
                  PUSHB[ ]	/* 1 value pushed */
                  0
                  MPPEM[ ]	/* MeasurePixelPerEm */
                  PUSHB[ ]	/* 1 value pushed */
                  10
                  LT[ ]	/* LessThan */
                  IF[ ]	/* If */
                    POP[ ]	/* PopTopStack */
                    PUSHB[ ]	/* 1 value pushed */
                    12
                    RS[ ]	/* ReadStore */
                  ELSE[ ]	/* Else */
                    MPPEM[ ]	/* MeasurePixelPerEm */
                    PUSHB[ ]	/* 1 value pushed */
                    30
                    LT[ ]	/* LessThan */
                    IF[ ]	/* If */
                      POP[ ]	/* PopTopStack */
                      PUSHB[ ]	/* 1 value pushed */
                      30
                      MPPEM[ ]	/* MeasurePixelPerEm */
                      SUB[ ]	/* Subtract */
                      PUSHW[ ]	/* 1 value pushed */
                      4096
                      MUL[ ]	/* Multiply */
                      PUSHB[ ]	/* 1 value pushed */
                      12
                      RS[ ]	/* ReadStore */
                      MUL[ ]	/* Multiply */
                      PUSHW[ ]	/* 1 value pushed */
                      1280
                      DIV[ ]	/* Divide */
                    EIF[ ]	/* EndIf */
                  EIF[ ]	/* EndIf */
                  ABS[ ]	/* Absolute */
                  SUB[ ]	/* Subtract */
                EIF[ ]	/* EndIf */
                PUSHB[ ]	/* 1 value pushed */
                1
                CALL[ ]	/* CallFunction */
              EIF[ ]	/* EndIf */
            EIF[ ]	/* EndIf */
            SWAP[ ]	/* SwapTopStack */
            PUSHB[ ]	/* 1 value pushed */
            0
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NEG[ ]	/* Negate */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          DUP[ ]	/* DuplicateTopStack */
          ABS[ ]	/* Absolute */
          PUSHB[ ]	/* 1 value pushed */
          22
          RS[ ]	/* ReadStore */
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      5
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        SUB[ ]	/* Subtract */
        ABS[ ]	/* Absolute */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        7
        RS[ ]	/* ReadStore */
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          7
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
          PUSHB[ ]	/* 1 value pushed */
          8
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      6
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        POP[ ]	/* PopTopStack */
        SWAP[ ]	/* SwapTopStack */
        POP[ ]	/* PopTopStack */
        PUSHB[ ]	/* 1 value pushed */
        3
        CALL[ ]	/* CallFunction */
        DUP[ ]	/* DuplicateTopStack */
        ABS[ ]	/* Absolute */
        PUSHB[ ]	/* 2 values pushed */
        7 98
        WS[ ]	/* WriteStore */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        8
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        6
        RCVT[ ]	/* ReadCVT */
        IF[ ]	/* If */
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 2 values pushed */
          1 13
          RS[ ]	/* ReadStore */
          RCVT[ ]	/* ReadCVT */
          MUL[ ]	/* Multiply */
          PUSHB[ ]	/* 2 values pushed */
          1 13
          RS[ ]	/* ReadStore */
          PUSHB[ ]	/* 1 value pushed */
          1
          ADD[ ]	/* Add */
          RCVT[ ]	/* ReadCVT */
          MUL[ ]	/* Multiply */
          PUSHB[ ]	/* 1 value pushed */
          5
          LOOPCALL[ ]	/* LoopAndCallFunction */
          POP[ ]	/* PopTopStack */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          8
          RS[ ]	/* ReadStore */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          PUSHB[ ]	/* 1 value pushed */
          1
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 2 values pushed */
          48 5
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          MINDEX[ ]	/* MoveXToTopStack */
          LTEQ[ ]	/* LessThenOrEqual */
          IF[ ]	/* If */
            ADD[ ]	/* Add */
            LT[ ]	/* LessThan */
          ELSE[ ]	/* Else */
            SUB[ ]	/* Subtract */
            GT[ ]	/* GreaterThan */
          EIF[ ]	/* EndIf */
          IF[ ]	/* If */
            SWAP[ ]	/* SwapTopStack */
          EIF[ ]	/* EndIf */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        64
        GTEQ[ ]	/* GreaterThanOrEqual */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          1
          CALL[ ]	/* CallFunction */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          64
        EIF[ ]	/* EndIf */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          NEG[ ]	/* Negate */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      7
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        9
        RS[ ]	/* ReadStore */
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 3 values pushed */
        0 2 0
        RS[ ]	/* ReadStore */
        ADD[ ]	/* Add */
        WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      8
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        9
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        2
        DIV[ ]	/* Divide */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        7
        LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      9
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        14
        RS[ ]	/* ReadStore */
        MUL[ ]	/* Multiply */
        PUSHW[ ]	/* 1 value pushed */
        1024
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
          ADD[ ]	/* Add */
        EIF[ ]	/* EndIf */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        ADD[ ]	/* Add */
        WCVTP[ ]	/* WriteCVTInPixels */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      10
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        9 14 0
        RS[ ]	/* ReadStore */
        RCVT[ ]	/* ReadCVT */
        WS[ ]	/* WriteStore */
        LOOPCALL[ ]	/* LoopAndCallFunction */
        POP[ ]	/* PopTopStack */
        PUSHB[ ]	/* 3 values pushed */
        0 1 0
        RS[ ]	/* ReadStore */
        ADD[ ]	/* Add */
        WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      11
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        RS[ ]	/* ReadStore */
        SWAP[ ]	/* SwapTopStack */
        WCVTP[ ]	/* WriteCVTInPixels */
        PUSHB[ ]	/* 3 values pushed */
        0 1 0
        RS[ ]	/* ReadStore */
        ADD[ ]	/* Add */
        WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      12
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        1
        CALL[ ]	/* CallFunction */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        ROLL[ ]	/* RollTopThreeStack */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        DUP[ ]	/* DuplicateTopStack */
        ABS[ ]	/* Absolute */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        32
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          48
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            32
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 1 value pushed */
            64
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          NEG[ ]	/* Negate */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        WCVTP[ ]	/* WriteCVTInPixels */
        WCVTP[ ]	/* WriteCVTInPixels */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      13
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        1
        CALL[ ]	/* CallFunction */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        ROLL[ ]	/* RollTopThreeStack */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        DUP[ ]	/* DuplicateTopStack */
        ABS[ ]	/* Absolute */
        PUSHB[ ]	/* 1 value pushed */
        36
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          0
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          64
        EIF[ ]	/* EndIf */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          NEG[ ]	/* Negate */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        WCVTP[ ]	/* WriteCVTInPixels */
        WCVTP[ ]	/* WriteCVTInPixels */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      14
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 4 values pushed */
        13 12 0 3
        RCVT[ ]	/* ReadCVT */
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
        ELSE[ ]	/* Else */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
        LOOPCALL[ ]	/* LoopAndCallFunction */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      15
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        2 2
        RCVT[ ]	/* ReadCVT */
        PUSHB[ ]	/* 1 value pushed */
        100
        SUB[ ]	/* Subtract */
        WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      16
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        15
        RS[ ]	/* ReadStore */
        MD[1]	/* MeasureDistance */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          15
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        16
        RS[ ]	/* ReadStore */
        MD[1]	/* MeasureDistance */
        PUSHB[ ]	/* 1 value pushed */
        0
        GT[ ]	/* GreaterThan */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          16
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      17
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        16
        DIV[ ]	/* Divide */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        DUP[ ]	/* DuplicateTopStack */
        PUSHW[ ]	/* 1 value pushed */
        1024
        MUL[ ]	/* Multiply */
        ROLL[ ]	/* RollTopThreeStack */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        17
        RS[ ]	/* ReadStore */
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        17
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        SWAP[ ]	/* SwapTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      18
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 2 values pushed */
          4 100
          WCVTP[ ]	/* WriteCVTInPixels */
        EIF[ ]	/* EndIf */
        DEPTH[ ]	/* GetDepthStack */
        PUSHB[ ]	/* 1 value pushed */
        13
        NEG[ ]	/* Negate */
        SWAP[ ]	/* SwapTopStack */
        JROT[ ]	/* JumpRelativeOnTrue */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      19
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        LTEQ[ ]	/* LessThenOrEqual */
        IF[ ]	/* If */
          MPPEM[ ]	/* MeasurePixelPerEm */
          GTEQ[ ]	/* GreaterThanOrEqual */
          IF[ ]	/* If */
            PUSHB[ ]	/* 2 values pushed */
            4 100
            WCVTP[ ]	/* WriteCVTInPixels */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
        DEPTH[ ]	/* GetDepthStack */
        PUSHB[ ]	/* 1 value pushed */
        19
        NEG[ ]	/* Negate */
        SWAP[ ]	/* SwapTopStack */
        JROT[ ]	/* JumpRelativeOnTrue */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      20
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 18
        RS[ ]	/* ReadStore */
        NEQ[ ]	/* NotEqual */
        IF[ ]	/* If */
          PUSHB[ ]	/* 2 values pushed */
          18 18
          RS[ ]	/* ReadStore */
          PUSHB[ ]	/* 1 value pushed */
          1
          SUB[ ]	/* Subtract */
          WS[ ]	/* WriteStore */
          PUSHB[ ]	/* 1 value pushed */
          17
          CALL[ ]	/* CallFunction */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        0
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 2 values pushed */
        15 2
        CINDEX[ ]	/* CopyXToTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 2 values pushed */
        16 2
        CINDEX[ ]	/* CopyXToTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        1
        SZPS[ ]	/* SetZonePointerS */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 2 values pushed */
          1 0
          RS[ ]	/* ReadStore */
          ADD[ ]	/* Add */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          WS[ ]	/* WriteStore */
          ROLL[ ]	/* RollTopThreeStack */
          ROLL[ ]	/* RollTopThreeStack */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          16
          LOOPCALL[ ]	/* LoopAndCallFunction */
          POP[ ]	/* PopTopStack */
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          1
          SUB[ ]	/* Subtract */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          16
          LOOPCALL[ ]	/* LoopAndCallFunction */
          POP[ ]	/* PopTopStack */
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 2 values pushed */
          1 0
          RS[ ]	/* ReadStore */
          ADD[ ]	/* Add */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          WS[ ]	/* WriteStore */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          16
          LOOPCALL[ ]	/* LoopAndCallFunction */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        15
        RS[ ]	/* ReadStore */
        GC[1]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        16
        RS[ ]	/* ReadStore */
        GC[1]	/* GetCoordOnPVector */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        2
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
          ADD[ ]	/* Add */
        EIF[ ]	/* EndIf */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        14
        RS[ ]	/* ReadStore */
        MUL[ ]	/* Multiply */
        PUSHW[ ]	/* 1 value pushed */
        1024
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
          ADD[ ]	/* Add */
        EIF[ ]	/* EndIf */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 2 values pushed */
        0 0
        SZP0[ ]	/* SetZonePointer0 */
        SWAP[ ]	/* SwapTopStack */
        WCVTP[ ]	/* WriteCVTInPixels */
        PUSHB[ ]	/* 1 value pushed */
        1
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 1 value pushed */
        0
        MIAP[0]	/* MoveIndirectAbsPt */
        PUSHB[ ]	/* 3 values pushed */
        1 1 1
        RS[ ]	/* ReadStore */
        ADD[ ]	/* Add */
        WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      21
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[0]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 2 values pushed */
        0 2
        RCVT[ ]	/* ReadCVT */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          18
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
          DUP[ ]	/* DuplicateTopStack */
          RCVT[ ]	/* ReadCVT */
          PUSHB[ ]	/* 1 value pushed */
          14
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
          PUSHB[ ]	/* 1 value pushed */
          13
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          1
          ADD[ ]	/* Add */
          WS[ ]	/* WriteStore */
          DUP[ ]	/* DuplicateTopStack */
          ADD[ ]	/* Add */
          PUSHB[ ]	/* 8 values pushed */
          24 24 1 0 17 0 19 0
          WS[ ]	/* WriteStore */
          WS[ ]	/* WriteStore */
          WS[ ]	/* WriteStore */
          ROLL[ ]	/* RollTopThreeStack */
          ADD[ ]	/* Add */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          20
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
          PUSHB[ ]	/* 1 value pushed */
          1
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 2 values pushed */
          20 8
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 1 value pushed */
          139
          CALL[ ]	/* CallFunction */
        ELSE[ ]	/* Else */
          CLEAR[ ]	/* ClearStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      22
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 21
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      23
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        1 21
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      24
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        2 21
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      25
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        3 21
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      26
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        4 21
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      27
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        5 21
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      28
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        6 21
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      29
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        7 21
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      30
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        8 21
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      31
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        9 21
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      43
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        16
        DIV[ ]	/* Divide */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        PUSHB[ ]	/* 1 value pushed */
        6
        ADD[ ]	/* Add */
        MPPEM[ ]	/* MeasurePixelPerEm */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          MDAP[0]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          1
          DELTAP1[ ]	/* DeltaExceptionP1 */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      44
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        16
        DIV[ ]	/* Divide */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        PUSHB[ ]	/* 1 value pushed */
        22
        ADD[ ]	/* Add */
        MPPEM[ ]	/* MeasurePixelPerEm */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          MDAP[0]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          1
          DELTAP2[ ]	/* DeltaExceptionP2 */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      45
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        16
        DIV[ ]	/* Divide */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        PUSHB[ ]	/* 1 value pushed */
        38
        ADD[ ]	/* Add */
        MPPEM[ ]	/* MeasurePixelPerEm */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          MDAP[0]	/* MoveDirectAbsPt */
          PUSHB[ ]	/* 1 value pushed */
          1
          DELTAP3[ ]	/* DeltaExceptionP3 */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      32
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[0]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        15
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 2 values pushed */
        0 2
        RCVT[ ]	/* ReadCVT */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          18
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
          DUP[ ]	/* DuplicateTopStack */
          RCVT[ ]	/* ReadCVT */
          PUSHB[ ]	/* 1 value pushed */
          14
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
          PUSHB[ ]	/* 1 value pushed */
          13
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          1
          ADD[ ]	/* Add */
          WS[ ]	/* WriteStore */
          DUP[ ]	/* DuplicateTopStack */
          ADD[ ]	/* Add */
          PUSHB[ ]	/* 1 value pushed */
          1
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 6 values pushed */
          24 24 1 0 17 0
          WS[ ]	/* WriteStore */
          WS[ ]	/* WriteStore */
          ROLL[ ]	/* RollTopThreeStack */
          ADD[ ]	/* Add */
          PUSHB[ ]	/* 2 values pushed */
          20 8
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 1 value pushed */
          139
          CALL[ ]	/* CallFunction */
        ELSE[ ]	/* Else */
          CLEAR[ ]	/* ClearStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      33
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 32
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      34
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        1 32
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      35
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        2 32
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      36
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        3 32
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      37
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        4 32
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      38
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        5 32
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      39
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        6 32
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      40
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        7 32
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      41
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        8 32
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      42
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        9 32
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      46
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        ALIGNRP[ ]	/* AlignRelativePt */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      47
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        24
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        RS[ ]	/* ReadStore */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        46
        LOOPCALL[ ]	/* LoopAndCallFunction */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      48
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        47
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        47
        LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      49
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        GC[1]	/* GetCoordOnPVector */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        14
        RS[ ]	/* ReadStore */
        MUL[ ]	/* Multiply */
        PUSHW[ ]	/* 1 value pushed */
        1024
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
          ADD[ ]	/* Add */
        EIF[ ]	/* EndIf */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        ADD[ ]	/* Add */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        SHPIX[ ]	/* ShiftZoneByPixel */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        NEQ[ ]	/* NotEqual */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          GC[1]	/* GetCoordOnPVector */
          DUP[ ]	/* DuplicateTopStack */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          14
          RS[ ]	/* ReadStore */
          MUL[ ]	/* Multiply */
          PUSHW[ ]	/* 1 value pushed */
          1024
          DIV[ ]	/* Divide */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          FLOOR[ ]	/* Floor */
          PUSHB[ ]	/* 1 value pushed */
          1
          MUL[ ]	/* Multiply */
          ADD[ ]	/* Add */
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
          SHPIX[ ]	/* ShiftZoneByPixel */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      50
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[0]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 2 values pushed */
        0 2
        RCVT[ ]	/* ReadCVT */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 2 values pushed */
          14 6
          RCVT[ ]	/* ReadCVT */
          WS[ ]	/* WriteStore */
          PUSHB[ ]	/* 1 value pushed */
          1
          SZPS[ ]	/* SetZonePointerS */
          PUSHB[ ]	/* 1 value pushed */
          49
          LOOPCALL[ ]	/* LoopAndCallFunction */
          PUSHB[ ]	/* 2 values pushed */
          5 1
          SZP2[ ]	/* SetZonePointer2 */
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            IUP[0]	/* InterpolateUntPts */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          CLEAR[ ]	/* ClearStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      51
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[0]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        15
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 2 values pushed */
        0 2
        RCVT[ ]	/* ReadCVT */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 2 values pushed */
          14 6
          RCVT[ ]	/* ReadCVT */
          WS[ ]	/* WriteStore */
          PUSHB[ ]	/* 1 value pushed */
          1
          SZPS[ ]	/* SetZonePointerS */
          PUSHB[ ]	/* 1 value pushed */
          49
          LOOPCALL[ ]	/* LoopAndCallFunction */
          PUSHB[ ]	/* 2 values pushed */
          5 1
          SZP2[ ]	/* SetZonePointer2 */
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            IUP[0]	/* InterpolateUntPts */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          CLEAR[ ]	/* ClearStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      52
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        SHC[1]	/* ShiftContourByLastPt */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      53
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[0]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 2 values pushed */
        14 6
        RCVT[ ]	/* ReadCVT */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        1
        RCVT[ ]	/* ReadCVT */
        MUL[ ]	/* Multiply */
        PUSHW[ ]	/* 1 value pushed */
        1024
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
          ADD[ ]	/* Add */
        EIF[ ]	/* EndIf */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        PUSHB[ ]	/* 1 value pushed */
        1
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        14
        RS[ ]	/* ReadStore */
        MUL[ ]	/* Multiply */
        PUSHW[ ]	/* 1 value pushed */
        1024
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
          ADD[ ]	/* Add */
        EIF[ ]	/* EndIf */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        PUSHB[ ]	/* 1 value pushed */
        1
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 5 values pushed */
        0 0 0 0 0
        WCVTP[ ]	/* WriteCVTInPixels */
        MIAP[0]	/* MoveIndirectAbsPt */
        SWAP[ ]	/* SwapTopStack */
        SHPIX[ ]	/* ShiftZoneByPixel */
        PUSHB[ ]	/* 2 values pushed */
        52 1
        SZP2[ ]	/* SetZonePointer2 */
        LOOPCALL[ ]	/* LoopAndCallFunction */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      54
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        ALIGNRP[ ]	/* AlignRelativePt */
        DUP[ ]	/* DuplicateTopStack */
        GC[1]	/* GetCoordOnPVector */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        14
        RS[ ]	/* ReadStore */
        MUL[ ]	/* Multiply */
        PUSHW[ ]	/* 1 value pushed */
        1024
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
          ADD[ ]	/* Add */
        EIF[ ]	/* EndIf */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        0
        RS[ ]	/* ReadStore */
        SUB[ ]	/* Subtract */
        SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      55
      FDEF[ ]	/* FunctionDefinition */
        MDAP[0]	/* MoveDirectAbsPt */
        SLOOP[ ]	/* SetLoopVariable */
        ALIGNRP[ ]	/* AlignRelativePt */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      56
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        ALIGNRP[ ]	/* AlignRelativePt */
        DUP[ ]	/* DuplicateTopStack */
        GC[1]	/* GetCoordOnPVector */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        14
        RS[ ]	/* ReadStore */
        MUL[ ]	/* Multiply */
        PUSHW[ ]	/* 1 value pushed */
        1024
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
          ADD[ ]	/* Add */
        EIF[ ]	/* EndIf */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        0
        RS[ ]	/* ReadStore */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        1
        RS[ ]	/* ReadStore */
        MUL[ ]	/* Multiply */
        SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      57
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        2 0
        SZPS[ ]	/* SetZonePointerS */
        CINDEX[ ]	/* CopyXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        DUP[ ]	/* DuplicateTopStack */
        GC[1]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        0
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        MD[0]	/* MeasureDistance */
        ROLL[ ]	/* RollTopThreeStack */
        ROLL[ ]	/* RollTopThreeStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        DUP[ ]	/* DuplicateTopStack */
        IF[ ]	/* If */
          DIV[ ]	/* Divide */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        1
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 3 values pushed */
        56 1 1
        SZP2[ ]	/* SetZonePointer2 */
        SZP1[ ]	/* SetZonePointer1 */
        LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      58
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 1 value pushed */
        23
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 2 values pushed */
        12 0
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        11
        RS[ ]	/* ReadStore */
        CALL[ ]	/* CallFunction */
        NEG[ ]	/* Negate */
        ROLL[ ]	/* RollTopThreeStack */
        MDAP[0]	/* MoveDirectAbsPt */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        ALIGNRP[ ]	/* AlignRelativePt */
        ROLL[ ]	/* RollTopThreeStack */
        SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      59
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 1 value pushed */
        23
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        6
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 2 values pushed */
        12 0
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        11
        RS[ ]	/* ReadStore */
        CALL[ ]	/* CallFunction */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        96
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          64
          LTEQ[ ]	/* LessThenOrEqual */
          IF[ ]	/* If */
            PUSHB[ ]	/* 4 values pushed */
            4 32 5 32
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 4 values pushed */
            4 38 5 26
          EIF[ ]	/* EndIf */
          WS[ ]	/* WriteStore */
          WS[ ]	/* WriteStore */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          10
          RS[ ]	/* ReadStore */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          SWAP[ ]	/* SwapTopStack */
          GC[1]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          GC[1]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
          SWAP[ ]	/* SwapTopStack */
          GC[0]	/* GetCoordOnPVector */
          ADD[ ]	/* Add */
          PUSHB[ ]	/* 1 value pushed */
          6
          RS[ ]	/* ReadStore */
          PUSHB[ ]	/* 1 value pushed */
          2
          DIV[ ]	/* Divide */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          FLOOR[ ]	/* Floor */
          PUSHB[ ]	/* 1 value pushed */
          1
          MUL[ ]	/* Multiply */
          ADD[ ]	/* Add */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          1
          CALL[ ]	/* CallFunction */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          ROLL[ ]	/* RollTopThreeStack */
          SUB[ ]	/* Subtract */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          RS[ ]	/* ReadStore */
          ADD[ ]	/* Add */
          ABS[ ]	/* Absolute */
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          5
          RS[ ]	/* ReadStore */
          SUB[ ]	/* Subtract */
          ABS[ ]	/* Absolute */
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            4
            RS[ ]	/* ReadStore */
            SUB[ ]	/* Subtract */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 1 value pushed */
            5
            RS[ ]	/* ReadStore */
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          2
          DIV[ ]	/* Divide */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          FLOOR[ ]	/* Floor */
          PUSHB[ ]	/* 1 value pushed */
          1
          MUL[ ]	/* Multiply */
          SUB[ ]	/* Subtract */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          MINDEX[ ]	/* MoveXToTopStack */
          SWAP[ ]	/* SwapTopStack */
          GC[0]	/* GetCoordOnPVector */
          SUB[ ]	/* Subtract */
          SHPIX[ ]	/* ShiftZoneByPixel */
        ELSE[ ]	/* Else */
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          10
          RS[ ]	/* ReadStore */
          GC[0]	/* GetCoordOnPVector */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          10
          RS[ ]	/* ReadStore */
          GC[1]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          GC[1]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
          ADD[ ]	/* Add */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          6
          RS[ ]	/* ReadStore */
          PUSHB[ ]	/* 1 value pushed */
          2
          DIV[ ]	/* Divide */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          FLOOR[ ]	/* Floor */
          PUSHB[ ]	/* 1 value pushed */
          1
          MUL[ ]	/* Multiply */
          ADD[ ]	/* Add */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          1
          CALL[ ]	/* CallFunction */
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          6
          RS[ ]	/* ReadStore */
          ADD[ ]	/* Add */
          PUSHB[ ]	/* 1 value pushed */
          1
          CALL[ ]	/* CallFunction */
          PUSHB[ ]	/* 1 value pushed */
          5
          CINDEX[ ]	/* CopyXToTopStack */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          5
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          2
          DIV[ ]	/* Divide */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          FLOOR[ ]	/* Floor */
          PUSHB[ ]	/* 1 value pushed */
          1
          MUL[ ]	/* Multiply */
          PUSHB[ ]	/* 1 value pushed */
          4
          MINDEX[ ]	/* MoveXToTopStack */
          SUB[ ]	/* Subtract */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          ADD[ ]	/* Add */
          ABS[ ]	/* Absolute */
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          ADD[ ]	/* Add */
          ABS[ ]	/* Absolute */
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            POP[ ]	/* PopTopStack */
          ELSE[ ]	/* Else */
            SWAP[ ]	/* SwapTopStack */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          MINDEX[ ]	/* MoveXToTopStack */
          SWAP[ ]	/* SwapTopStack */
          GC[0]	/* GetCoordOnPVector */
          SUB[ ]	/* Subtract */
          SHPIX[ ]	/* ShiftZoneByPixel */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      60
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 1 value pushed */
        23
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        5
        MINDEX[ ]	/* MoveXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        SWAP[ ]	/* SwapTopStack */
        ALIGNRP[ ]	/* AlignRelativePt */
        SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      61
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 1 value pushed */
        23
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        10
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        GC[0]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[1]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        1
        CALL[ ]	/* CallFunction */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      62
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 1 value pushed */
        23
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        0
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          MDAP[0]	/* MoveDirectAbsPt */
          DUP[ ]	/* DuplicateTopStack */
          ALIGNRP[ ]	/* AlignRelativePt */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          GC[1]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          GC[1]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          5
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          GC[1]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          GC[1]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          6
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          5
          CINDEX[ ]	/* CopyXToTopStack */
          MD[0]	/* MeasureDistance */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          SUB[ ]	/* Subtract */
          PUSHW[ ]	/* 2 values pushed */
          2048 2048
          MUL[ ]	/* Multiply */
          MUL[ ]	/* Multiply */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          IF[ ]	/* If */
            DIV[ ]	/* Divide */
          ELSE[ ]	/* Else */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
          MUL[ ]	/* Multiply */
          PUSHW[ ]	/* 1 value pushed */
          1024
          DIV[ ]	/* Divide */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          FLOOR[ ]	/* Floor */
          PUSHB[ ]	/* 1 value pushed */
          1
          MUL[ ]	/* Multiply */
          ADD[ ]	/* Add */
          SWAP[ ]	/* SwapTopStack */
          MDAP[0]	/* MoveDirectAbsPt */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          DUP[ ]	/* DuplicateTopStack */
          ALIGNRP[ ]	/* AlignRelativePt */
          ROLL[ ]	/* RollTopThreeStack */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      63
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 1 value pushed */
        23
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        10
        RS[ ]	/* ReadStore */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        DUP[ ]	/* DuplicateTopStack */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        32
        ADD[ ]	/* Add */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        2
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
          ADD[ ]	/* Add */
        EIF[ ]	/* EndIf */
        FLOOR[ ]	/* Floor */
        PUSHB[ ]	/* 1 value pushed */
        1
        MUL[ ]	/* Multiply */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        ALIGNRP[ ]	/* AlignRelativePt */
        ROLL[ ]	/* RollTopThreeStack */
        SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      64
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        23
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          LT[ ]	/* LessThan */
        ELSE[ ]	/* Else */
          GT[ ]	/* GreaterThan */
        EIF[ ]	/* EndIf */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          ALIGNRP[ ]	/* AlignRelativePt */
        EIF[ ]	/* EndIf */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        48 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      65
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        23
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          GT[ ]	/* GreaterThan */
        ELSE[ ]	/* Else */
          LT[ ]	/* LessThan */
        EIF[ ]	/* EndIf */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          ALIGNRP[ ]	/* AlignRelativePt */
        EIF[ ]	/* EndIf */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        48 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      66
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        23
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          LT[ ]	/* LessThan */
        ELSE[ ]	/* Else */
          GT[ ]	/* GreaterThan */
        EIF[ ]	/* EndIf */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          ALIGNRP[ ]	/* AlignRelativePt */
        EIF[ ]	/* EndIf */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        23
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          GT[ ]	/* GreaterThan */
        ELSE[ ]	/* Else */
          LT[ ]	/* LessThan */
        EIF[ ]	/* EndIf */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          ALIGNRP[ ]	/* AlignRelativePt */
        EIF[ ]	/* EndIf */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        48 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      67
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        58
        CALL[ ]	/* CallFunction */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        23
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          LT[ ]	/* LessThan */
        ELSE[ ]	/* Else */
          GT[ ]	/* GreaterThan */
        EIF[ ]	/* EndIf */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          ALIGNRP[ ]	/* AlignRelativePt */
        EIF[ ]	/* EndIf */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        48 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      68
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        59
        CALL[ ]	/* CallFunction */
        ROLL[ ]	/* RollTopThreeStack */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        ALIGNRP[ ]	/* AlignRelativePt */
        PUSHB[ ]	/* 1 value pushed */
        6
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        ROLL[ ]	/* RollTopThreeStack */
        SHPIX[ ]	/* ShiftZoneByPixel */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        23
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          LT[ ]	/* LessThan */
        ELSE[ ]	/* Else */
          GT[ ]	/* GreaterThan */
        EIF[ ]	/* EndIf */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          ALIGNRP[ ]	/* AlignRelativePt */
        EIF[ ]	/* EndIf */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        48 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        6
        RS[ ]	/* ReadStore */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 1 value pushed */
        48
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      69
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        GC[0]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[1]	/* GetCoordOnPVector */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        12
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        11
        RS[ ]	/* ReadStore */
        CALL[ ]	/* CallFunction */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        ALIGNRP[ ]	/* AlignRelativePt */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        SWAP[ ]	/* SwapTopStack */
        SHPIX[ ]	/* ShiftZoneByPixel */
        PUSHB[ ]	/* 2 values pushed */
        48 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      70
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        10 4
        CINDEX[ ]	/* CopyXToTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[1]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        6
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 2 values pushed */
        12 0
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        11
        RS[ ]	/* ReadStore */
        CALL[ ]	/* CallFunction */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        96
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          64
          LTEQ[ ]	/* LessThenOrEqual */
          IF[ ]	/* If */
            PUSHB[ ]	/* 4 values pushed */
            4 32 5 32
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 4 values pushed */
            4 38 5 26
          EIF[ ]	/* EndIf */
          WS[ ]	/* WriteStore */
          WS[ ]	/* WriteStore */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          GC[1]	/* GetCoordOnPVector */
          PUSHB[ ]	/* 1 value pushed */
          6
          RS[ ]	/* ReadStore */
          PUSHB[ ]	/* 1 value pushed */
          2
          DIV[ ]	/* Divide */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          FLOOR[ ]	/* Floor */
          PUSHB[ ]	/* 1 value pushed */
          1
          MUL[ ]	/* Multiply */
          ADD[ ]	/* Add */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          1
          CALL[ ]	/* CallFunction */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          ROLL[ ]	/* RollTopThreeStack */
          SUB[ ]	/* Subtract */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          RS[ ]	/* ReadStore */
          ADD[ ]	/* Add */
          ABS[ ]	/* Absolute */
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          5
          RS[ ]	/* ReadStore */
          SUB[ ]	/* Subtract */
          ABS[ ]	/* Absolute */
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            4
            RS[ ]	/* ReadStore */
            SUB[ ]	/* Subtract */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 1 value pushed */
            5
            RS[ ]	/* ReadStore */
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          2
          DIV[ ]	/* Divide */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            ADD[ ]	/* Add */
          EIF[ ]	/* EndIf */
          FLOOR[ ]	/* Floor */
          PUSHB[ ]	/* 1 value pushed */
          1
          MUL[ ]	/* Multiply */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          GC[0]	/* GetCoordOnPVector */
          SUB[ ]	/* Subtract */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          ALIGNRP[ ]	/* AlignRelativePt */
          SWAP[ ]	/* SwapTopStack */
          SHPIX[ ]	/* ShiftZoneByPixel */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          DUP[ ]	/* DuplicateTopStack */
          DUP[ ]	/* DuplicateTopStack */
          GC[0]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          GC[1]	/* GetCoordOnPVector */
          PUSHB[ ]	/* 1 value pushed */
          1
          CALL[ ]	/* CallFunction */
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
          SHPIX[ ]	/* ShiftZoneByPixel */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 2 values pushed */
        48 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      71
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 58
        CALL[ ]	/* CallFunction */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        48 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      72
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 59
        CALL[ ]	/* CallFunction */
        POP[ ]	/* PopTopStack */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        ALIGNRP[ ]	/* AlignRelativePt */
        PUSHB[ ]	/* 1 value pushed */
        6
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        SWAP[ ]	/* SwapTopStack */
        SHPIX[ ]	/* ShiftZoneByPixel */
        PUSHB[ ]	/* 2 values pushed */
        48 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        6
        RS[ ]	/* ReadStore */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 1 value pushed */
        48
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      73
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZP2[ ]	/* SetZonePointer2 */
        DUP[ ]	/* DuplicateTopStack */
        GC[1]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        0
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 3 values pushed */
        0 1 1
        SZP2[ ]	/* SetZonePointer2 */
        SZP1[ ]	/* SetZonePointer1 */
        SZP0[ ]	/* SetZonePointer0 */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 1 value pushed */
        54
        LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      74
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZP2[ ]	/* SetZonePointer2 */
        DUP[ ]	/* DuplicateTopStack */
        GC[1]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        0
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 3 values pushed */
        0 1 1
        SZP2[ ]	/* SetZonePointer2 */
        SZP1[ ]	/* SetZonePointer1 */
        SZP0[ ]	/* SetZonePointer0 */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 1 value pushed */
        54
        LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      75
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 1
        SZP1[ ]	/* SetZonePointer1 */
        SZP0[ ]	/* SetZonePointer0 */
        PUSHB[ ]	/* 1 value pushed */
        55
        LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      76
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        57
        LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      77
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        RCVT[ ]	/* ReadCVT */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[0]	/* MoveDirectAbsPt */
        DUP[ ]	/* DuplicateTopStack */
        GC[0]	/* GetCoordOnPVector */
        ROLL[ ]	/* RollTopThreeStack */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        SHPIX[ ]	/* ShiftZoneByPixel */
        PUSHB[ ]	/* 2 values pushed */
        48 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      78
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        10
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        77
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      79
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        0 0 70
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      80
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        0 1 70
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      81
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        1 0 70
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      82
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        1 1 70
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      83
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        0 0 71
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      84
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        0 1 71
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      85
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        1 0 71
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      86
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        1 1 71
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      87
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        0 0 0 67
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      88
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        0 1 0 67
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      89
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        1 0 0 67
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      90
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        1 1 0 67
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      91
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        0 0 1 67
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      92
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        0 1 1 67
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      93
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        1 0 1 67
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      94
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        1 1 1 67
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      95
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        0 0 69
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      96
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        0 1 69
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      97
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        1 0 69
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      98
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        1 1 69
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      99
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        0 0 72
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      100
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        0 1 72
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      101
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        1 0 72
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      102
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        1 1 72
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      103
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        0 0 0 68
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      104
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        0 1 0 68
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      105
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        1 0 0 68
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      106
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        1 1 0 68
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      107
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        0 0 1 68
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      108
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        0 1 1 68
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      109
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        1 0 1 68
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      110
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        1 1 1 68
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      111
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 60
        CALL[ ]	/* CallFunction */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        48 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      112
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 60
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        64
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      113
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 60
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        65
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      114
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 2 values pushed */
        0 60
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        66
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      115
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        1 60
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        64
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      116
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        1 60
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        65
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      117
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 2 values pushed */
        1 60
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        66
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      118
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 61
        CALL[ ]	/* CallFunction */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        48 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      119
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 61
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        64
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      120
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 61
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        65
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      121
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 61
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        66
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      122
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        1 61
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        64
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      123
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        1 61
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        65
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      124
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        1 61
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        66
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      125
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 62
        CALL[ ]	/* CallFunction */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        48 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      126
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 62
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        64
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      127
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 62
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        65
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      128
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 62
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        66
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      129
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        1 62
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        64
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      130
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        1 62
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        65
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      131
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        1 62
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        66
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      132
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 63
        CALL[ ]	/* CallFunction */
        MDAP[0]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        48 1
        SZP1[ ]	/* SetZonePointer1 */
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      133
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 63
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        64
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      134
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 63
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        65
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      135
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        0 63
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        66
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      136
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        1 63
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        64
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      137
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        1 63
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        65
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      138
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        1 63
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        66
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      139
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 3 values pushed */
        11 0 3
        RCVT[ ]	/* ReadCVT */
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          6
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 3 values pushed */
          4 2 3
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            SWAP[ ]	/* SwapTopStack */
            POP[ ]	/* PopTopStack */
          ELSE[ ]	/* Else */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
        WS[ ]	/* WriteStore */
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        8
        NEG[ ]	/* Negate */
        PUSHB[ ]	/* 1 value pushed */
        3
        DEPTH[ ]	/* GetDepthStack */
        LT[ ]	/* LessThan */
        JROT[ ]	/* JumpRelativeOnTrue */
        PUSHB[ ]	/* 2 values pushed */
        5 1
        SZP2[ ]	/* SetZonePointer2 */
        RCVT[ ]	/* ReadCVT */
        IF[ ]	/* If */
          IUP[0]	/* InterpolateUntPts */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
    </assembly>
  </fpgm>

  <prep>
    <assembly>
      SVTCA[0]	/* SetFPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHW[ ]	/* 1 value pushed */
      200
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
        PUSHB[ ]	/* 2 values pushed */
        1 1
        INSTCTRL[ ]	/* SetInstrExecControl */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      1
      PUSHW[ ]	/* 2 values pushed */
      2048 2048
      MUL[ ]	/* Multiply */
      WCVTF[ ]	/* WriteCVTInFUnits */
      PUSHB[ ]	/* 2 values pushed */
      0 7
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 3 values pushed */
      23 1 0
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 7
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 4 values pushed */
      12 8 1 10
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 7
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 4 values pushed */
      20 6 1 10
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 8
      WS[ ]	/* WriteStore */
      PUSHW[ ]	/* 3 values pushed */
      832 1 11
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHB[ ]	/* 2 values pushed */
      0 9
      WS[ ]	/* WriteStore */
      PUSHW[ ]	/* 3 values pushed */
      64 1 11
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHW[ ]	/* 2 values pushed */
      3 0
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 2 values pushed */
      36 1
      GETINFO[ ]	/* GetInfo */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
        PUSHB[ ]	/* 1 value pushed */
        64
        GETINFO[ ]	/* GetInfo */
        IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          3 100
          WCVTP[ ]	/* WriteCVTInPixels */
          PUSHB[ ]	/* 2 values pushed */
          40 1
          GETINFO[ ]	/* GetInfo */
          LTEQ[ ]	/* LessThenOrEqual */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            2048
            GETINFO[ ]	/* GetInfo */
            IF[ ]	/* If */
              PUSHW[ ]	/* 2 values pushed */
              3 0
              WCVTP[ ]	/* WriteCVTInPixels */
            EIF[ ]	/* EndIf */
          ELSE[ ]	/* Else */
            PUSHB[ ]	/* 2 values pushed */
            39 1
            GETINFO[ ]	/* GetInfo */
            LTEQ[ ]	/* LessThenOrEqual */
            IF[ ]	/* If */
              PUSHW[ ]	/* 3 values pushed */
              2176 1 1088
              GETINFO[ ]	/* GetInfo */
              MUL[ ]	/* Multiply */
              EQ[ ]	/* Equal */
              IF[ ]	/* If */
                PUSHW[ ]	/* 2 values pushed */
                3 0
                WCVTP[ ]	/* WriteCVTInPixels */
              EIF[ ]	/* EndIf */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 4 values pushed */
      14 6 1 14
      LOOPCALL[ ]	/* LoopAndCallFunction */
      PUSHW[ ]	/* 1 value pushed */
      511
      SCANCTRL[ ]	/* ScanConversionControl */
      PUSHB[ ]	/* 1 value pushed */
      4
      SCANTYPE[ ]	/* ScanType */
      PUSHB[ ]	/* 2 values pushed */
      2 0
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 4 values pushed */
      5 100 6 0
      WCVTP[ ]	/* WriteCVTInPixels */
      WCVTP[ ]	/* WriteCVTInPixels */
    </assembly>
  </prep>

  <cvt>
    <cv index="0" value="0"/>
    <cv index="1" value="0"/>
    <cv index="2" value="0"/>
    <cv index="3" value="0"/>
    <cv index="4" value="0"/>
    <cv index="5" value="0"/>
    <cv index="6" value="0"/>
    <cv index="7" value="0"/>
    <cv index="8" value="0"/>
    <cv index="9" value="0"/>
    <cv index="10" value="237"/>
    <cv index="11" value="237"/>
    <cv index="12" value="234"/>
    <cv index="13" value="234"/>
    <cv index="14" value="1435"/>
    <cv index="15" value="-425"/>
    <cv index="16" value="1435"/>
    <cv index="17" value="1435"/>
    <cv index="18" value="-425"/>
    <cv index="19" value="-425"/>
    <cv index="20" value="1435"/>
    <cv index="21" value="-425"/>
    <cv index="22" value="1435"/>
    <cv index="23" value="1435"/>
    <cv index="24" value="-425"/>
    <cv index="25" value="-425"/>
  </cvt>

  <loca>
    <!-- The 'loca' table will be calculated by the compiler -->
  </loca>

  <glyf>

    <!-- The xMin, yMin, xMax and yMax values
         will be recalculated by the compiler. -->

    <TTGlyph name=".notdef" xMin="55" yMin="-394" xMax="1899" yMax="1710">
      <contour>
        <pt x="1250" y="380" on="1"/>
        <pt x="1207" y="380" on="0"/>
        <pt x="1174" y="411" on="1"/>
        <pt x="678" y="909" on="0"/>
        <pt x="671" y="909" on="1"/>
        <pt x="666" y="909" on="0"/>
        <pt x="378" y="637" on="1"/>
        <pt x="355" y="654" on="1"/>
        <pt x="270" y="716" on="0"/>
        <pt x="270" y="780" on="1"/>
        <pt x="270" y="805" on="1"/>
        <pt x="270" y="829" on="0"/>
        <pt x="303" y="863" on="1"/>
        <pt x="876" y="1436" on="1"/>
        <pt x="921" y="1477" on="0"/>
        <pt x="973" y="1477" on="1"/>
        <pt x="1027" y="1477" on="0"/>
        <pt x="1071" y="1436" on="1"/>
        <pt x="1647" y="861" on="1"/>
        <pt x="1679" y="826" on="0"/>
        <pt x="1679" y="780" on="1"/>
        <pt x="1679" y="736" on="0"/>
        <pt x="1610" y="670" on="0"/>
        <pt x="1568" y="670" on="1"/>
        <pt x="1545" y="671" on="1"/>
        <pt x="1520" y="671" on="0"/>
        <pt x="1486" y="703" on="1"/>
        <pt x="1019" y="1172" on="1"/>
        <pt x="999" y="1191" on="0"/>
        <pt x="973" y="1191" on="1"/>
        <pt x="950" y="1191" on="0"/>
        <pt x="929" y="1172" on="1"/>
        <pt x="830" y="1073" on="0"/>
        <pt x="830" y="1067" on="1"/>
        <pt x="830" y="1061" on="0"/>
        <pt x="1325" y="562" on="1"/>
        <pt x="1358" y="530" on="0"/>
        <pt x="1358" y="487" on="1"/>
        <pt x="1358" y="444" on="0"/>
        <pt x="1292" y="380" on="0"/>
      </contour>
      <contour>
        <pt x="993" y="-110" on="1"/>
        <pt x="846" y="-110" on="0"/>
        <pt x="737" y="-5" on="1"/>
        <pt x="161" y="533" on="1"/>
        <pt x="55" y="644" on="0"/>
        <pt x="55" y="788" on="1"/>
        <pt x="55" y="933" on="0"/>
        <pt x="161" y="1044" on="1"/>
        <pt x="722" y="1604" on="1"/>
        <pt x="832" y="1710" on="0"/>
        <pt x="978" y="1710" on="1"/>
        <pt x="1122" y="1710" on="0"/>
        <pt x="1232" y="1604" on="1"/>
        <pt x="1793" y="1044" on="1"/>
        <pt x="1899" y="935" on="0"/>
        <pt x="1899" y="788" on="1"/>
        <pt x="1899" y="641" on="0"/>
        <pt x="1793" y="533" on="1"/>
        <pt x="1264" y="24" on="1"/>
        <pt x="1212" y="-26" on="0"/>
        <pt x="1146" y="-26" on="1"/>
        <pt x="1079" y="-26" on="0"/>
        <pt x="1020" y="21" on="1"/>
        <pt x="420" y="599" on="1"/>
        <pt x="460" y="637" on="0"/>
        <pt x="535" y="706" on="0"/>
        <pt x="576" y="706" on="1"/>
        <pt x="619" y="705" on="0"/>
        <pt x="653" y="676" on="1"/>
        <pt x="1138" y="205" on="1"/>
        <pt x="1155" y="188" on="0"/>
        <pt x="1174" y="188" on="1"/>
        <pt x="1195" y="188" on="0"/>
        <pt x="1209" y="202" on="1"/>
        <pt x="1675" y="651" on="1"/>
        <pt x="1730" y="714" on="0"/>
        <pt x="1730" y="788" on="1"/>
        <pt x="1730" y="863" on="0"/>
        <pt x="1675" y="924" on="1"/>
        <pt x="1112" y="1485" on="1"/>
        <pt x="1051" y="1542" on="0"/>
        <pt x="978" y="1542" on="1"/>
        <pt x="902" y="1542" on="0"/>
        <pt x="841" y="1485" on="1"/>
        <pt x="279" y="924" on="1"/>
        <pt x="224" y="864" on="0"/>
        <pt x="224" y="788" on="1"/>
        <pt x="224" y="711" on="0"/>
        <pt x="279" y="651" on="1"/>
        <pt x="1065" y="-84" on="1"/>
        <pt x="1042" y="-110" on="0"/>
      </contour>
      <contour>
        <pt x="204" y="-391" on="1"/>
        <pt x="165" y="-391" on="1"/>
        <pt x="165" y="-205" on="1"/>
        <pt x="283" y="-205" on="1"/>
        <pt x="283" y="-244" on="1"/>
        <pt x="204" y="-244" on="1"/>
        <pt x="204" y="-279" on="1"/>
        <pt x="274" y="-279" on="1"/>
        <pt x="274" y="-317" on="1"/>
        <pt x="204" y="-317" on="1"/>
      </contour>
      <contour>
        <pt x="371" y="-394" on="1"/>
        <pt x="288" y="-394" on="0"/>
        <pt x="288" y="-299" on="1"/>
        <pt x="288" y="-204" on="0"/>
        <pt x="371" y="-204" on="1"/>
        <pt x="453" y="-204" on="0"/>
        <pt x="453" y="-299" on="1"/>
        <pt x="453" y="-394" on="0"/>
      </contour>
      <contour>
        <pt x="371" y="-357" on="1"/>
        <pt x="415" y="-357" on="0"/>
        <pt x="415" y="-299" on="1"/>
        <pt x="415" y="-239" on="0"/>
        <pt x="371" y="-239" on="1"/>
        <pt x="326" y="-239" on="0"/>
        <pt x="326" y="-299" on="1"/>
        <pt x="326" y="-357" on="0"/>
      </contour>
      <contour>
        <pt x="607" y="-391" on="1"/>
        <pt x="571" y="-391" on="1"/>
        <pt x="504" y="-282" on="1"/>
        <pt x="504" y="-391" on="1"/>
        <pt x="466" y="-391" on="1"/>
        <pt x="466" y="-205" on="1"/>
        <pt x="501" y="-205" on="1"/>
        <pt x="568" y="-314" on="1"/>
        <pt x="568" y="-205" on="1"/>
        <pt x="607" y="-205" on="1"/>
      </contour>
      <contour>
        <pt x="709" y="-391" on="1"/>
        <pt x="671" y="-391" on="1"/>
        <pt x="671" y="-244" on="1"/>
        <pt x="620" y="-244" on="1"/>
        <pt x="620" y="-205" on="1"/>
        <pt x="760" y="-205" on="1"/>
        <pt x="760" y="-244" on="1"/>
        <pt x="709" y="-244" on="1"/>
      </contour>
      <contour>
        <pt x="1014" y="-391" on="1"/>
        <pt x="976" y="-391" on="1"/>
        <pt x="976" y="-296" on="1"/>
        <pt x="945" y="-391" on="1"/>
        <pt x="912" y="-391" on="1"/>
        <pt x="881" y="-296" on="1"/>
        <pt x="881" y="-391" on="1"/>
        <pt x="843" y="-391" on="1"/>
        <pt x="843" y="-205" on="1"/>
        <pt x="881" y="-205" on="1"/>
        <pt x="929" y="-339" on="1"/>
        <pt x="976" y="-205" on="1"/>
        <pt x="1014" y="-205" on="1"/>
      </contour>
      <contour>
        <pt x="1108" y="-394" on="1"/>
        <pt x="1025" y="-394" on="0"/>
        <pt x="1025" y="-299" on="1"/>
        <pt x="1025" y="-204" on="0"/>
        <pt x="1108" y="-204" on="1"/>
        <pt x="1192" y="-204" on="0"/>
        <pt x="1192" y="-299" on="1"/>
        <pt x="1192" y="-394" on="0"/>
      </contour>
      <contour>
        <pt x="1108" y="-357" on="1"/>
        <pt x="1152" y="-357" on="0"/>
        <pt x="1152" y="-299" on="1"/>
        <pt x="1152" y="-239" on="0"/>
        <pt x="1108" y="-239" on="1"/>
        <pt x="1063" y="-239" on="0"/>
        <pt x="1063" y="-299" on="1"/>
        <pt x="1063" y="-357" on="0"/>
      </contour>
      <contour>
        <pt x="1344" y="-391" on="1"/>
        <pt x="1309" y="-391" on="1"/>
        <pt x="1241" y="-282" on="1"/>
        <pt x="1241" y="-391" on="1"/>
        <pt x="1203" y="-391" on="1"/>
        <pt x="1203" y="-205" on="1"/>
        <pt x="1238" y="-205" on="1"/>
        <pt x="1306" y="-314" on="1"/>
        <pt x="1306" y="-205" on="1"/>
        <pt x="1344" y="-205" on="1"/>
      </contour>
      <contour>
        <pt x="1434" y="-394" on="1"/>
        <pt x="1356" y="-394" on="0"/>
        <pt x="1356" y="-299" on="1"/>
        <pt x="1356" y="-204" on="0"/>
        <pt x="1447" y="-204" on="1"/>
        <pt x="1470" y="-204" on="0"/>
        <pt x="1500" y="-216" on="1"/>
        <pt x="1489" y="-253" on="1"/>
        <pt x="1465" y="-241" on="0"/>
        <pt x="1447" y="-241" on="1"/>
        <pt x="1394" y="-241" on="0"/>
        <pt x="1394" y="-299" on="1"/>
        <pt x="1394" y="-356" on="0"/>
        <pt x="1434" y="-356" on="1"/>
        <pt x="1466" y="-356" on="0"/>
        <pt x="1466" y="-314" on="1"/>
        <pt x="1433" y="-314" on="1"/>
        <pt x="1433" y="-277" on="1"/>
        <pt x="1505" y="-277" on="1"/>
        <pt x="1505" y="-391" on="1"/>
        <pt x="1470" y="-391" on="1"/>
        <pt x="1470" y="-383" on="1"/>
        <pt x="1456" y="-392" on="0"/>
      </contour>
      <contour>
        <pt x="1643" y="-391" on="1"/>
        <pt x="1522" y="-391" on="1"/>
        <pt x="1522" y="-205" on="1"/>
        <pt x="1641" y="-205" on="1"/>
        <pt x="1641" y="-244" on="1"/>
        <pt x="1560" y="-244" on="1"/>
        <pt x="1560" y="-277" on="1"/>
        <pt x="1637" y="-277" on="1"/>
        <pt x="1637" y="-314" on="1"/>
        <pt x="1560" y="-314" on="1"/>
        <pt x="1560" y="-354" on="1"/>
        <pt x="1643" y="-354" on="1"/>
      </contour>
      <contour>
        <pt x="1796" y="-391" on="1"/>
        <pt x="1753" y="-391" on="1"/>
        <pt x="1713" y="-325" on="1"/>
        <pt x="1693" y="-325" on="1"/>
        <pt x="1693" y="-391" on="1"/>
        <pt x="1655" y="-391" on="1"/>
        <pt x="1655" y="-205" on="1"/>
        <pt x="1724" y="-205" on="1"/>
        <pt x="1787" y="-205" on="0"/>
        <pt x="1787" y="-265" on="1"/>
        <pt x="1787" y="-304" on="0"/>
        <pt x="1753" y="-319" on="1"/>
      </contour>
      <contour>
        <pt x="1722" y="-288" on="1"/>
        <pt x="1748" y="-288" on="0"/>
        <pt x="1748" y="-265" on="1"/>
        <pt x="1748" y="-244" on="0"/>
        <pt x="1724" y="-244" on="1"/>
        <pt x="1693" y="-244" on="1"/>
        <pt x="1693" y="-288" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          11
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 29 values pushed */
            63 6 2 0 2 180 1 12 11 181 1 13 12 171 166 140 137 124 119 6 14 13 220 145 2
            17 14 5 76
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            12
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 32 values pushed */
              63 6 2 0 2 180 1 12 11 181 1 13 12 166 119 2 57 13 171 140 137 124 4 14 57
              220 145 2 17 14 6 76
            ELSE[ ]	/* Else */
              MPPEM[ ]	/* MeasurePixelPerEm */
              PUSHB[ ]	/* 1 value pushed */
              14
              LT[ ]	/* LessThan */
              IF[ ]	/* If */
                NPUSHB[ ]	/* 29 values pushed */
                63 6 2 0 2 180 1 12 11 181 1 13 12 171 166 140 137 124 119 6 14 13 220 145 2
                17 14 5 76
              ELSE[ ]	/* Else */
                MPPEM[ ]	/* MeasurePixelPerEm */
                PUSHB[ ]	/* 1 value pushed */
                15
                LT[ ]	/* LessThan */
                IF[ ]	/* If */
                  NPUSHB[ ]	/* 32 values pushed */
                  63 6 2 0 2 180 1 12 11 181 1 13 12 166 119 2 57 13 171 140 137 124 4 14 57
                  220 145 2 17 14 6 76
                ELSE[ ]	/* Else */
                  MPPEM[ ]	/* MeasurePixelPerEm */
                  PUSHB[ ]	/* 1 value pushed */
                  17
                  LT[ ]	/* LessThan */
                  IF[ ]	/* If */
                    NPUSHB[ ]	/* 29 values pushed */
                    63 6 2 0 2 180 1 12 11 181 1 13 12 171 166 140 137 124 119 6 14 13 220 145 2
                    17 14 5 76
                  ELSE[ ]	/* Else */
                    MPPEM[ ]	/* MeasurePixelPerEm */
                    PUSHB[ ]	/* 1 value pushed */
                    18
                    LT[ ]	/* LessThan */
                    IF[ ]	/* If */
                      NPUSHB[ ]	/* 32 values pushed */
                      63 6 2 0 2 180 1 12 11 181 1 13 12 166 119 2 57 13 171 140 137 124 4 14 57
                      220 145 2 17 14 6 76
                    ELSE[ ]	/* Else */
                      MPPEM[ ]	/* MeasurePixelPerEm */
                      PUSHB[ ]	/* 1 value pushed */
                      27
                      LT[ ]	/* LessThan */
                      IF[ ]	/* If */
                        NPUSHB[ ]	/* 29 values pushed */
                        63 6 2 0 2 180 1 12 11 181 1 13 12 171 166 140 137 124 119 6 14 13 220 145 2
                        17 14 5 76
                      ELSE[ ]	/* Else */
                        MPPEM[ ]	/* MeasurePixelPerEm */
                        PUSHB[ ]	/* 1 value pushed */
                        28
                        LT[ ]	/* LessThan */
                        IF[ ]	/* If */
                          NPUSHB[ ]	/* 32 values pushed */
                          63 6 2 0 2 180 1 12 11 181 1 13 12 166 119 2 57 13 171 140 137 124 4 14 57
                          220 145 2 17 14 6 76
                        ELSE[ ]	/* Else */
                          NPUSHB[ ]	/* 29 values pushed */
                          63 6 2 0 2 180 1 12 11 181 1 13 12 171 166 140 137 124 119 6 14 13 220 145 2
                          17 14 5 76
                        EIF[ ]	/* EndIf */
                      EIF[ ]	/* EndIf */
                    EIF[ ]	/* EndIf */
                  EIF[ ]	/* EndIf */
                EIF[ ]	/* EndIf */
              EIF[ ]	/* EndIf */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          11
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 141 values pushed */
            0 7 3 2 3 7 2 128 0 2 0 3 2 0 126 59 1 0 8 3 0 8 126 60 1
            4 6 11 6 4 11 128 0 5 0 9 1 5 9 105 0 1 0 3 7 1 3 105 0 8
            0 6 4 8 6 105 56 48 41 39 38 33 31 30 25 22 21 16 12 11 58 49 42 35 26
            24 18 7 12 13 11 12 105 65 57 50 45 4 13 54 51 44 3 14 17 13 14 103 52 43
            64 34 62 5 17 10 10 17 89 52 43 64 34 62 5 17 17 10 95 55 53 47 46 40 37
            36 63 32 29 28 27 23 20 19 61 15 17 10 17 10 79
          ELSE[ ]	/* Else */
            MPPEM[ ]	/* MeasurePixelPerEm */
            PUSHB[ ]	/* 1 value pushed */
            12
            LT[ ]	/* LessThan */
            IF[ ]	/* If */
              NPUSHB[ ]	/* 146 values pushed */
              0 7 3 2 3 7 2 128 0 2 0 3 2 0 126 59 1 0 8 3 0 8 126 60 1
              4 6 11 6 4 11 128 0 5 0 9 1 5 9 105 0 1 0 3 7 1 3 105 0 8
              0 6 4 8 6 105 56 48 41 39 38 33 31 30 25 22 21 16 12 11 58 49 42 35 26
              24 18 7 12 13 11 12 105 50 45 2 13 57 14 13 87 65 1 57 54 51 44 3 14 17
              57 14 103 52 43 64 34 62 5 17 10 10 17 89 52 43 64 34 62 5 17 17 10 95 55
              53 47 46 40 37 36 63 32 29 28 27 23 20 19 61 15 17 10 17 10 79
            ELSE[ ]	/* Else */
              MPPEM[ ]	/* MeasurePixelPerEm */
              PUSHB[ ]	/* 1 value pushed */
              14
              LT[ ]	/* LessThan */
              IF[ ]	/* If */
                NPUSHB[ ]	/* 141 values pushed */
                0 7 3 2 3 7 2 128 0 2 0 3 2 0 126 59 1 0 8 3 0 8 126 60 1
                4 6 11 6 4 11 128 0 5 0 9 1 5 9 105 0 1 0 3 7 1 3 105 0 8
                0 6 4 8 6 105 56 48 41 39 38 33 31 30 25 22 21 16 12 11 58 49 42 35 26
                24 18 7 12 13 11 12 105 65 57 50 45 4 13 54 51 44 3 14 17 13 14 103 52 43
                64 34 62 5 17 10 10 17 89 52 43 64 34 62 5 17 17 10 95 55 53 47 46 40 37
                36 63 32 29 28 27 23 20 19 61 15 17 10 17 10 79
              ELSE[ ]	/* Else */
                MPPEM[ ]	/* MeasurePixelPerEm */
                PUSHB[ ]	/* 1 value pushed */
                15
                LT[ ]	/* LessThan */
                IF[ ]	/* If */
                  NPUSHB[ ]	/* 146 values pushed */
                  0 7 3 2 3 7 2 128 0 2 0 3 2 0 126 59 1 0 8 3 0 8 126 60 1
                  4 6 11 6 4 11 128 0 5 0 9 1 5 9 105 0 1 0 3 7 1 3 105 0 8
                  0 6 4 8 6 105 56 48 41 39 38 33 31 30 25 22 21 16 12 11 58 49 42 35 26
                  24 18 7 12 13 11 12 105 50 45 2 13 57 14 13 87 65 1 57 54 51 44 3 14 17
                  57 14 103 52 43 64 34 62 5 17 10 10 17 89 52 43 64 34 62 5 17 17 10 95 55
                  53 47 46 40 37 36 63 32 29 28 27 23 20 19 61 15 17 10 17 10 79
                ELSE[ ]	/* Else */
                  MPPEM[ ]	/* MeasurePixelPerEm */
                  PUSHB[ ]	/* 1 value pushed */
                  17
                  LT[ ]	/* LessThan */
                  IF[ ]	/* If */
                    NPUSHB[ ]	/* 141 values pushed */
                    0 7 3 2 3 7 2 128 0 2 0 3 2 0 126 59 1 0 8 3 0 8 126 60 1
                    4 6 11 6 4 11 128 0 5 0 9 1 5 9 105 0 1 0 3 7 1 3 105 0 8
                    0 6 4 8 6 105 56 48 41 39 38 33 31 30 25 22 21 16 12 11 58 49 42 35 26
                    24 18 7 12 13 11 12 105 65 57 50 45 4 13 54 51 44 3 14 17 13 14 103 52 43
                    64 34 62 5 17 10 10 17 89 52 43 64 34 62 5 17 17 10 95 55 53 47 46 40 37
                    36 63 32 29 28 27 23 20 19 61 15 17 10 17 10 79
                  ELSE[ ]	/* Else */
                    MPPEM[ ]	/* MeasurePixelPerEm */
                    PUSHB[ ]	/* 1 value pushed */
                    18
                    LT[ ]	/* LessThan */
                    IF[ ]	/* If */
                      NPUSHB[ ]	/* 146 values pushed */
                      0 7 3 2 3 7 2 128 0 2 0 3 2 0 126 59 1 0 8 3 0 8 126 60 1
                      4 6 11 6 4 11 128 0 5 0 9 1 5 9 105 0 1 0 3 7 1 3 105 0 8
                      0 6 4 8 6 105 56 48 41 39 38 33 31 30 25 22 21 16 12 11 58 49 42 35 26
                      24 18 7 12 13 11 12 105 50 45 2 13 57 14 13 87 65 1 57 54 51 44 3 14 17
                      57 14 103 52 43 64 34 62 5 17 10 10 17 89 52 43 64 34 62 5 17 17 10 95 55
                      53 47 46 40 37 36 63 32 29 28 27 23 20 19 61 15 17 10 17 10 79
                    ELSE[ ]	/* Else */
                      MPPEM[ ]	/* MeasurePixelPerEm */
                      PUSHB[ ]	/* 1 value pushed */
                      27
                      LT[ ]	/* LessThan */
                      IF[ ]	/* If */
                        NPUSHB[ ]	/* 141 values pushed */
                        0 7 3 2 3 7 2 128 0 2 0 3 2 0 126 59 1 0 8 3 0 8 126 60 1
                        4 6 11 6 4 11 128 0 5 0 9 1 5 9 105 0 1 0 3 7 1 3 105 0 8
                        0 6 4 8 6 105 56 48 41 39 38 33 31 30 25 22 21 16 12 11 58 49 42 35 26
                        24 18 7 12 13 11 12 105 65 57 50 45 4 13 54 51 44 3 14 17 13 14 103 52 43
                        64 34 62 5 17 10 10 17 89 52 43 64 34 62 5 17 17 10 95 55 53 47 46 40 37
                        36 63 32 29 28 27 23 20 19 61 15 17 10 17 10 79
                      ELSE[ ]	/* Else */
                        MPPEM[ ]	/* MeasurePixelPerEm */
                        PUSHB[ ]	/* 1 value pushed */
                        28
                        LT[ ]	/* LessThan */
                        IF[ ]	/* If */
                          NPUSHB[ ]	/* 146 values pushed */
                          0 7 3 2 3 7 2 128 0 2 0 3 2 0 126 59 1 0 8 3 0 8 126 60 1
                          4 6 11 6 4 11 128 0 5 0 9 1 5 9 105 0 1 0 3 7 1 3 105 0 8
                          0 6 4 8 6 105 56 48 41 39 38 33 31 30 25 22 21 16 12 11 58 49 42 35 26
                          24 18 7 12 13 11 12 105 50 45 2 13 57 14 13 87 65 1 57 54 51 44 3 14 17
                          57 14 103 52 43 64 34 62 5 17 10 10 17 89 52 43 64 34 62 5 17 17 10 95 55
                          53 47 46 40 37 36 63 32 29 28 27 23 20 19 61 15 17 10 17 10 79
                        ELSE[ ]	/* Else */
                          NPUSHB[ ]	/* 141 values pushed */
                          0 7 3 2 3 7 2 128 0 2 0 3 2 0 126 59 1 0 8 3 0 8 126 60 1
                          4 6 11 6 4 11 128 0 5 0 9 1 5 9 105 0 1 0 3 7 1 3 105 0 8
                          0 6 4 8 6 105 56 48 41 39 38 33 31 30 25 22 21 16 12 11 58 49 42 35 26
                          24 18 7 12 13 11 12 105 65 57 50 45 4 13 54 51 44 3 14 17 13 14 103 52 43
                          64 34 62 5 17 10 10 17 89 52 43 64 34 62 5 17 17 10 95 55 53 47 46 40 37
                          36 63 32 29 28 27 23 20 19 61 15 17 10 17 10 79
                        EIF[ ]	/* EndIf */
                      EIF[ ]	/* EndIf */
                    EIF[ ]	/* EndIf */
                  EIF[ ]	/* EndIf */
                EIF[ ]	/* EndIf */
              EIF[ ]	/* EndIf */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          NPUSHB[ ]	/* 149 values pushed */
          222 221 157 156 149 148 110 109 102 101 41 40 1 0 226 224 221 227 222 227 217 215 214 213 212
          211 210 209 208 207 206 205 204 203 202 201 200 199 198 197 194 193 192 191 190 189 188 186 184 182
          179 177 175 174 173 172 170 169 168 167 165 164 161 159 156 163 157 163 153 151 148 155 149 155 147
          146 144 143 142 141 139 138 136 135 134 133 132 131 130 129 128 127 126 125 123 122 121 120 118 117
          114 112 109 116 110 116 106 104 101 108 102 108 100 99 98 97 96 95 94 93 92 91 82 80 72
          70 67 65 61 59 51 49 40 90 41 90 30 28 25 22 16 14 0 39 1 39 66 6 22
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="A" xMin="0" yMin="-429" xMax="833" yMax="1435">
      <contour>
        <pt x="595" y="-429" on="1"/>
        <pt x="595" y="488" on="1"/>
        <pt x="328" y="488" on="1"/>
        <pt x="238" y="252" on="1"/>
        <pt x="238" y="39" on="1"/>
        <pt x="3" y="-163" on="1"/>
        <pt x="0" y="-163" on="1"/>
        <pt x="0" y="252" on="1"/>
        <pt x="90" y="481" on="1"/>
        <pt x="0" y="723" on="1"/>
        <pt x="180" y="723" on="1"/>
        <pt x="356" y="1191" on="1"/>
        <pt x="297" y="1435" on="1"/>
        <pt x="833" y="1435" on="1"/>
        <pt x="833" y="-107" on="1"/>
      </contour>
      <contour>
        <pt x="595" y="723" on="1"/>
        <pt x="592" y="1194" on="1"/>
        <pt x="418" y="723" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 44 values pushed */
          16 11 2 1 2 1 76 14 8 7 5 4 3 0 7 0 73 4 3 2 1 0 0 1 0
          100 0 2 2 14 2 78 15 15 15 17 15 17 18 23 17 5 7 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="B" xMin="0" yMin="-425" xMax="796" yMax="1435">
      <contour>
        <pt x="86" y="-425" on="1"/>
        <pt x="86" y="794" on="1"/>
        <pt x="0" y="1019" on="1"/>
        <pt x="0" y="1022" on="1"/>
        <pt x="86" y="1022" on="1"/>
        <pt x="86" y="1049" on="1"/>
        <pt x="86" y="1114" on="0"/>
        <pt x="73" y="1216" on="0"/>
        <pt x="50" y="1304" on="0"/>
        <pt x="19" y="1387" on="0"/>
        <pt x="0" y="1432" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="679" y="1435" on="1"/>
        <pt x="679" y="1198" on="1"/>
        <pt x="531" y="963" on="1"/>
        <pt x="679" y="963" on="1"/>
        <pt x="796" y="843" on="1"/>
        <pt x="796" y="253" on="1"/>
      </contour>
      <contour>
        <pt x="324" y="1022" on="1"/>
        <pt x="330" y="1025" on="1"/>
        <pt x="426" y="1198" on="1"/>
        <pt x="426" y="1201" on="1"/>
        <pt x="327" y="1201" on="1"/>
      </contour>
      <contour>
        <pt x="324" y="139" on="1"/>
        <pt x="562" y="377" on="1"/>
        <pt x="559" y="787" on="1"/>
        <pt x="327" y="787" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 53 values pushed */
          18 13 2 0 3 16 1 2 4 2 2 76 24 23 17 0 4 4 73 0 0 3 2 3 0
          2 128 0 2 0 4 2 4 99 0 3 3 1 95 0 1 1 14 3 78 19 37 18 38 34
          5 7 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="C" xMin="0" yMin="-418" xMax="796" yMax="1439">
      <contour>
        <pt x="86" y="-418" on="1"/>
        <pt x="89" y="1205" on="1"/>
        <pt x="0" y="1436" on="1"/>
        <pt x="0" y="1439" on="1"/>
        <pt x="796" y="1439" on="1"/>
        <pt x="796" y="995" on="1"/>
        <pt x="561" y="936" on="1"/>
        <pt x="558" y="1205" on="1"/>
        <pt x="324" y="1202" on="1"/>
        <pt x="324" y="140" on="1"/>
        <pt x="561" y="378" on="1"/>
        <pt x="561" y="791" on="1"/>
        <pt x="796" y="850" on="1"/>
        <pt x="796" y="254" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 33 values pushed */
          1 1 1 0 1 76 13 12 11 10 9 6 5 0 8 1 73 0 1 1 0 95 0 0 0
          14 1 78 19 34 2 7 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="D" xMin="0" yMin="-425" xMax="797" yMax="1435">
      <contour>
        <pt x="328" y="137" on="1"/>
        <pt x="563" y="369" on="1"/>
        <pt x="563" y="700" on="0"/>
        <pt x="559" y="1200" on="1"/>
        <pt x="328" y="1200" on="1"/>
      </contour>
      <contour>
        <pt x="87" y="-425" on="1"/>
        <pt x="90" y="1200" on="1"/>
        <pt x="0" y="1432" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="797" y="1435" on="1"/>
        <pt x="797" y="248" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 24 values pushed */
          10 6 5 1 0 5 0 73 0 0 0 1 95 0 1 1 14 0 78 35 19 2 7 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="E" xMin="0" yMin="-425" xMax="797" yMax="1435">
      <contour>
        <pt x="87" y="-425" on="1"/>
        <pt x="90" y="724" on="1"/>
        <pt x="0" y="959" on="1"/>
        <pt x="0" y="962" on="1"/>
        <pt x="90" y="962" on="1"/>
        <pt x="90" y="1197" on="1"/>
        <pt x="0" y="1432" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="797" y="1435" on="1"/>
        <pt x="791" y="1021" on="1"/>
        <pt x="563" y="962" on="1"/>
        <pt x="559" y="1200" on="1"/>
        <pt x="325" y="1197" on="1"/>
        <pt x="325" y="962" on="1"/>
        <pt x="532" y="962" on="1"/>
        <pt x="532" y="724" on="1"/>
        <pt x="325" y="724" on="1"/>
        <pt x="325" y="134" on="1"/>
        <pt x="563" y="372" on="1"/>
        <pt x="566" y="669" on="1"/>
        <pt x="797" y="724" on="1"/>
        <pt x="797" y="248" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 45 values pushed */
          10 9 5 3 0 2 1 76 21 20 19 18 17 1 0 7 4 73 3 1 0 0 4 0 4
          99 0 2 2 1 95 0 1 1 14 2 78 17 17 19 34 34 5 7 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="F" xMin="0" yMin="-422" xMax="796" yMax="1435">
      <contour>
        <pt x="86" y="-422" on="1"/>
        <pt x="89" y="667" on="1"/>
        <pt x="0" y="902" on="1"/>
        <pt x="0" y="905" on="1"/>
        <pt x="89" y="905" on="1"/>
        <pt x="89" y="1198" on="1"/>
        <pt x="0" y="1432" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="796" y="1435" on="1"/>
        <pt x="796" y="991" on="1"/>
        <pt x="561" y="933" on="1"/>
        <pt x="558" y="1201" on="1"/>
        <pt x="324" y="1198" on="1"/>
        <pt x="324" y="905" on="1"/>
        <pt x="531" y="905" on="1"/>
        <pt x="531" y="667" on="1"/>
        <pt x="324" y="667" on="1"/>
        <pt x="324" y="-221" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 41 values pushed */
          10 9 5 3 0 2 1 76 17 1 0 3 4 73 3 1 0 0 4 0 4 99 0 2 2
          1 95 0 1 1 14 2 78 17 17 19 34 34 5 7 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="G" xMin="0" yMin="-429" xMax="801" yMax="1435">
      <contour>
        <pt x="90" y="-429" on="1"/>
        <pt x="90" y="1200" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="801" y="1435" on="1"/>
        <pt x="798" y="990" on="1"/>
        <pt x="563" y="931" on="1"/>
        <pt x="563" y="1200" on="1"/>
        <pt x="325" y="1197" on="1"/>
        <pt x="325" y="137" on="1"/>
        <pt x="563" y="372" on="1"/>
        <pt x="563" y="607" on="1"/>
        <pt x="467" y="607" on="1"/>
        <pt x="380" y="845" on="1"/>
        <pt x="801" y="842" on="1"/>
        <pt x="801" y="251" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 43 values pushed */
          1 1 1 0 5 4 2 3 1 2 76 14 9 8 0 4 2 73 0 3 0 2 3 2 99
          0 1 1 0 95 0 0 0 14 1 78 17 19 19 18 4 7 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="H" xMin="0" yMin="-425" xMax="886" yMax="1435">
      <contour>
        <pt x="89" y="-425" on="1"/>
        <pt x="89" y="553" on="1"/>
        <pt x="0" y="787" on="1"/>
        <pt x="89" y="787" on="1"/>
        <pt x="89" y="1201" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="324" y="1435" on="1"/>
        <pt x="327" y="784" on="1"/>
        <pt x="562" y="787" on="1"/>
        <pt x="562" y="1435" on="1"/>
        <pt x="886" y="1435" on="1"/>
        <pt x="886" y="1432" on="1"/>
        <pt x="799" y="1207" on="1"/>
        <pt x="796" y="-157" on="1"/>
        <pt x="562" y="50" on="1"/>
        <pt x="562" y="550" on="1"/>
        <pt x="324" y="550" on="1"/>
        <pt x="318" y="-228" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 41 values pushed */
          12 4 2 0 1 1 1 4 0 2 76 17 14 13 0 4 4 73 2 1 0 0 4 0 4
          99 3 1 1 1 14 1 78 21 17 17 18 18 5 7 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="I" xMin="0" yMin="-425" xMax="414" yMax="1435">
      <contour>
        <pt x="89" y="-425" on="1"/>
        <pt x="89" y="1201" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="414" y="1435" on="1"/>
        <pt x="414" y="1432" on="1"/>
        <pt x="324" y="1198" on="1"/>
        <pt x="324" y="1198" on="0"/>
        <pt x="318" y="-228" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 17 values pushed */
          7 5 1 0 4 0 73 0 0 0 14 0 78 18 1 7 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="J" xMin="48" yMin="-422" xMax="756" yMax="1435">
      <contour>
        <pt x="756" y="-422" on="1"/>
        <pt x="48" y="259" on="1"/>
        <pt x="48" y="727" on="1"/>
        <pt x="285" y="669" on="1"/>
        <pt x="282" y="376" on="1"/>
        <pt x="519" y="142" on="1"/>
        <pt x="519" y="1204" on="1"/>
        <pt x="433" y="1435" on="1"/>
        <pt x="756" y="1435" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 20 values pushed */
          6 5 4 3 2 1 0 7 0 73 0 0 0 14 0 78 23 1 7 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="K" xMin="0" yMin="-422" xMax="827" yMax="1435">
      <contour>
        <pt x="86" y="-422" on="1"/>
        <pt x="89" y="784" on="1"/>
        <pt x="0" y="1019" on="1"/>
        <pt x="0" y="1022" on="1"/>
        <pt x="89" y="1025" on="1"/>
        <pt x="89" y="1198" on="1"/>
        <pt x="0" y="1432" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="324" y="1435" on="1"/>
        <pt x="327" y="1022" on="1"/>
        <pt x="558" y="1435" on="1"/>
        <pt x="827" y="1435" on="1"/>
        <pt x="534" y="963" on="1"/>
        <pt x="679" y="963" on="1"/>
        <pt x="796" y="846" on="1"/>
        <pt x="796" y="164" on="1"/>
        <pt x="561" y="-39" on="1"/>
        <pt x="558" y="788" on="1"/>
        <pt x="324" y="784" on="1"/>
        <pt x="324" y="-221" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 53 values pushed */
          5 1 0 1 14 1 4 3 2 76 9 1 0 1 75 19 16 15 1 0 5 4 73 0 0
          1 3 1 0 3 128 0 3 0 4 3 4 99 2 1 1 1 14 1 78 20 17 18 34 34
          5 7 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="L" xMin="0" yMin="-422" xMax="798" yMax="1435">
      <contour>
        <pt x="89" y="-422" on="1"/>
        <pt x="89" y="1204" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="326" y="1435" on="1"/>
        <pt x="326" y="142" on="1"/>
        <pt x="561" y="376" on="1"/>
        <pt x="564" y="672" on="1"/>
        <pt x="798" y="727" on="1"/>
        <pt x="798" y="256" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 20 values pushed */
          8 7 6 5 4 1 0 7 0 73 0 0 0 14 0 78 18 1 7 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="M" xMin="0" yMin="-429" xMax="1243" yMax="1435">
      <contour>
        <pt x="90" y="-429" on="1"/>
        <pt x="90" y="1200" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="504" y="1435" on="1"/>
        <pt x="424" y="1265" on="1"/>
        <pt x="618" y="724" on="1"/>
        <pt x="822" y="1259" on="1"/>
        <pt x="742" y="1432" on="1"/>
        <pt x="742" y="1435" on="1"/>
        <pt x="1243" y="1435" on="1"/>
        <pt x="1243" y="1432" on="1"/>
        <pt x="1156" y="1207" on="1"/>
        <pt x="1153" y="-426" on="1"/>
        <pt x="918" y="-219" on="1"/>
        <pt x="915" y="873" on="1"/>
        <pt x="625" y="106" on="1"/>
        <pt x="325" y="879" on="1"/>
        <pt x="325" y="-225" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 27 values pushed */
          17 16 15 14 13 12 11 6 5 4 1 0 12 0 73 1 1 0 0 14 0 78 36 18 2
          7 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="N" xMin="0" yMin="-425" xMax="977" yMax="1435">
      <contour>
        <pt x="884" y="-425" on="1"/>
        <pt x="833" y="-376" on="0"/>
        <pt x="669" y="-238" on="0"/>
        <pt x="652" y="-225" on="1"/>
        <pt x="652" y="51" on="1"/>
        <pt x="328" y="894" on="1"/>
        <pt x="325" y="894" on="1"/>
        <pt x="325" y="-225" on="1"/>
        <pt x="90" y="-425" on="1"/>
        <pt x="90" y="1200" on="1"/>
        <pt x="0" y="1432" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="504" y="1435" on="1"/>
        <pt x="420" y="1256" on="1"/>
        <pt x="652" y="650" on="1"/>
        <pt x="652" y="1435" on="1"/>
        <pt x="977" y="1435" on="1"/>
        <pt x="887" y="1200" on="1"/>
        <pt x="887" y="77" on="0"/>
        <pt x="886" y="-113" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 25 values pushed */
          17 14 13 9 8 7 5 4 3 0 10 0 73 1 1 0 0 14 0 78 19 42 2 7 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="O" xMin="0" yMin="-422" xMax="884" yMax="1435">
      <contour>
        <pt x="443" y="-422" on="1"/>
        <pt x="86" y="-68" on="1"/>
        <pt x="86" y="1207" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="884" y="1435" on="1"/>
        <pt x="795" y="1201" on="1"/>
        <pt x="795" y="-71" on="1"/>
      </contour>
      <contour>
        <pt x="440" y="-68" on="1"/>
        <pt x="557" y="46" on="1"/>
        <pt x="557" y="1201" on="1"/>
        <pt x="323" y="1201" on="1"/>
        <pt x="323" y="49" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 30 values pushed */
          2 1 1 0 1 76 11 8 6 5 1 5 1 73 0 1 1 0 95 0 0 0 14 1 78
          21 19 2 7 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="P" xMin="0" yMin="-422" xMax="796" yMax="1435">
      <contour>
        <pt x="89" y="-422" on="1"/>
        <pt x="89" y="433" on="1"/>
        <pt x="0" y="664" on="1"/>
        <pt x="0" y="667" on="1"/>
        <pt x="89" y="670" on="1"/>
        <pt x="89" y="1201" on="1"/>
        <pt x="0" y="1432" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="796" y="1435" on="1"/>
        <pt x="793" y="723" on="1"/>
        <pt x="324" y="433" on="1"/>
        <pt x="324" y="-221" on="1"/>
      </contour>
      <contour>
        <pt x="327" y="670" on="1"/>
        <pt x="561" y="818" on="1"/>
        <pt x="558" y="1201" on="1"/>
        <pt x="327" y="1201" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 42 values pushed */
          13 12 9 3 0 2 1 76 5 1 2 1 75 11 10 1 0 4 0 73 0 0 2 0 134
          0 2 2 1 95 0 1 1 14 2 78 22 34 34 3 7 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Q" xMin="0" yMin="-425" xMax="886" yMax="1435">
      <contour>
        <pt x="796" y="-425" on="1"/>
        <pt x="559" y="-308" on="1"/>
        <pt x="444" y="-425" on="1"/>
        <pt x="86" y="-71" on="1"/>
        <pt x="86" y="1207" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="886" y="1435" on="1"/>
        <pt x="796" y="1201" on="1"/>
      </contour>
      <contour>
        <pt x="441" y="-71" on="1"/>
        <pt x="562" y="47" on="1"/>
        <pt x="559" y="1201" on="1"/>
        <pt x="327" y="1201" on="1"/>
        <pt x="324" y="47" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 32 values pushed */
          4 1 1 0 1 76 12 9 7 3 2 1 0 7 1 73 0 1 1 0 95 0 0 0 14
          1 78 20 21 2 7 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="R" xMin="0" yMin="-422" xMax="942" yMax="1435">
      <contour>
        <pt x="853" y="-422" on="1"/>
        <pt x="616" y="-212" on="1"/>
        <pt x="619" y="521" on="1"/>
        <pt x="582" y="595" on="1"/>
        <pt x="323" y="431" on="1"/>
        <pt x="323" y="139" on="1"/>
        <pt x="86" y="-68" on="1"/>
        <pt x="86" y="438" on="1"/>
        <pt x="0" y="669" on="1"/>
        <pt x="86" y="669" on="1"/>
        <pt x="86" y="1263" on="1"/>
        <pt x="0" y="1432" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="795" y="1435" on="1"/>
        <pt x="795" y="727" on="1"/>
        <pt x="751" y="699" on="1"/>
        <pt x="942" y="699" on="1"/>
        <pt x="853" y="524" on="1"/>
      </contour>
      <contour>
        <pt x="326" y="672" on="1"/>
        <pt x="557" y="816" on="1"/>
        <pt x="557" y="1201" on="1"/>
        <pt x="323" y="1201" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          17
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 24 values pushed */
            10 1 3 1 19 18 14 3 0 3 2 76 17 7 6 5 4 3 2 1 0 9 0 73
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 27 values pushed */
            10 1 3 1 19 14 2 2 3 18 1 0 2 3 76 17 7 6 5 4 3 2 1 0 9
            0 73
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          17
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 17 values pushed */
            2 1 0 3 0 134 0 3 3 1 95 0 1 1 14 3 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 23 values pushed */
            0 2 3 0 3 2 0 128 0 0 0 132 0 3 3 1 95 0 1 1 14 3 78
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          20 18 34 24 4 7 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="S" xMin="0" yMin="-425" xMax="917" yMax="1435">
      <contour>
        <pt x="89" y="-425" on="1"/>
        <pt x="89" y="667" on="1"/>
        <pt x="324" y="519" on="1"/>
        <pt x="327" y="139" on="1"/>
        <pt x="562" y="371" on="1"/>
        <pt x="562" y="371" on="0"/>
        <pt x="555" y="581" on="1"/>
        <pt x="89" y="877" on="1"/>
        <pt x="89" y="1201" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="917" y="1435" on="1"/>
        <pt x="799" y="1204" on="1"/>
        <pt x="799" y="877" on="1"/>
        <pt x="562" y="991" on="1"/>
        <pt x="559" y="1201" on="1"/>
        <pt x="324" y="1198" on="1"/>
        <pt x="333" y="966" on="1"/>
        <pt x="799" y="695" on="1"/>
        <pt x="799" y="253" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 38 values pushed */
          11 8 2 1 0 1 76 18 17 16 13 12 7 6 4 3 2 1 0 12 1 73 0 1 1
          0 95 0 0 0 14 1 78 20 25 2 7 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="T" xMin="67" yMin="-428" xMax="1073" yMax="1439">
      <contour>
        <pt x="689" y="-428" on="1"/>
        <pt x="451" y="-217" on="1"/>
        <pt x="451" y="1204" on="1"/>
        <pt x="302" y="1201" on="1"/>
        <pt x="302" y="934" on="1"/>
        <pt x="67" y="993" on="1"/>
        <pt x="67" y="1439" on="1"/>
        <pt x="1073" y="1439" on="1"/>
        <pt x="1073" y="993" on="1"/>
        <pt x="838" y="934" on="1"/>
        <pt x="835" y="1204" on="1"/>
        <pt x="689" y="1204" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 27 values pushed */
          9 8 5 4 1 0 6 0 73 2 1 0 0 1 95 0 1 1 14 0 78 19 19 18 3
          7 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="U" xMin="0" yMin="-425" xMax="798" yMax="1435">
      <contour>
        <pt x="798" y="-425" on="1"/>
        <pt x="89" y="-425" on="1"/>
        <pt x="89" y="1204" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="327" y="1435" on="1"/>
        <pt x="327" y="-185" on="1"/>
        <pt x="561" y="-185" on="1"/>
        <pt x="561" y="1435" on="1"/>
        <pt x="798" y="1435" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 30 values pushed */
          2 1 2 1 1 76 3 1 1 1 14 77 0 2 2 0 96 0 0 0 15 0 78 17 17
          18 16 4 7 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="V" xMin="0" yMin="-422" xMax="886" yMax="1439">
      <contour>
        <pt x="444" y="-422" on="1"/>
        <pt x="86" y="-67" on="1"/>
        <pt x="86" y="1211" on="1"/>
        <pt x="0" y="1436" on="1"/>
        <pt x="0" y="1439" on="1"/>
        <pt x="324" y="1439" on="1"/>
        <pt x="324" y="50" on="1"/>
        <pt x="441" y="-67" on="1"/>
        <pt x="562" y="50" on="1"/>
        <pt x="562" y="1439" on="1"/>
        <pt x="886" y="1439" on="1"/>
        <pt x="796" y="1205" on="1"/>
        <pt x="796" y="-70" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 22 values pushed */
          12 11 8 7 6 2 1 7 0 73 1 1 0 0 14 0 78 20 35 2 7 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="W" xMin="0" yMin="-422" xMax="1361" yMax="1439">
      <contour>
        <pt x="917" y="-422" on="1"/>
        <pt x="682" y="-188" on="1"/>
        <pt x="676" y="-188" on="1"/>
        <pt x="445" y="-422" on="1"/>
        <pt x="90" y="-67" on="1"/>
        <pt x="90" y="1208" on="1"/>
        <pt x="0" y="1439" on="1"/>
        <pt x="327" y="1439" on="1"/>
        <pt x="327" y="47" on="1"/>
        <pt x="448" y="-67" on="1"/>
        <pt x="562" y="53" on="1"/>
        <pt x="562" y="1025" on="1"/>
        <pt x="800" y="1025" on="1"/>
        <pt x="800" y="50" on="1"/>
        <pt x="917" y="-67" on="1"/>
        <pt x="1034" y="47" on="1"/>
        <pt x="1034" y="1439" on="1"/>
        <pt x="1361" y="1439" on="1"/>
        <pt x="1272" y="1208" on="1"/>
        <pt x="1272" y="-70" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 38 values pushed */
          18 5 2 1 0 1 76 19 15 14 13 10 9 8 4 3 1 10 1 73 0 1 0 1 134
          2 1 0 0 14 0 78 20 20 22 3 7 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="X" xMin="0" yMin="-429" xMax="887" yMax="1435">
      <contour>
        <pt x="798" y="-429" on="1"/>
        <pt x="560" y="-219" on="1"/>
        <pt x="563" y="338" on="1"/>
        <pt x="439" y="458" on="1"/>
        <pt x="325" y="338" on="1"/>
        <pt x="325" y="-222" on="1"/>
        <pt x="87" y="-429" on="1"/>
        <pt x="87" y="458" on="1"/>
        <pt x="278" y="650" on="1"/>
        <pt x="87" y="845" on="1"/>
        <pt x="87" y="1203" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="325" y="1435" on="1"/>
        <pt x="325" y="959" on="1"/>
        <pt x="442" y="845" on="1"/>
        <pt x="563" y="965" on="1"/>
        <pt x="560" y="1435" on="1"/>
        <pt x="887" y="1435" on="1"/>
        <pt x="798" y="1203" on="1"/>
        <pt x="798" y="842" on="1"/>
        <pt x="606" y="653" on="1"/>
        <pt x="798" y="461" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 33 values pushed */
          21 20 19 18 15 14 13 10 9 8 7 6 5 4 3 2 1 0 18 0 73 1 1 0 0
          14 0 78 20 27 2 7 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Y" xMin="0" yMin="-429" xMax="889" yMax="1435">
      <contour>
        <pt x="561" y="-429" on="1"/>
        <pt x="325" y="-222" on="1"/>
        <pt x="325" y="605" on="1"/>
        <pt x="87" y="844" on="1"/>
        <pt x="87" y="1206" on="1"/>
        <pt x="0" y="1432" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="325" y="1435" on="1"/>
        <pt x="325" y="962" on="1"/>
        <pt x="443" y="844" on="1"/>
        <pt x="564" y="962" on="1"/>
        <pt x="564" y="1435" on="1"/>
        <pt x="889" y="1435" on="1"/>
        <pt x="799" y="1200" on="1"/>
        <pt x="799" y="841" on="1"/>
        <pt x="564" y="605" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 26 values pushed */
          15 14 13 10 9 8 4 3 2 1 0 11 0 73 1 1 0 0 14 0 78 20 37 2 7
          24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="Z" xMin="0" yMin="-425" xMax="711" yMax="1435">
      <contour>
        <pt x="87" y="-425" on="1"/>
        <pt x="87" y="697" on="1"/>
        <pt x="408" y="1197" on="1"/>
        <pt x="408" y="1200" on="1"/>
        <pt x="87" y="1200" on="1"/>
        <pt x="0" y="1432" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="680" y="1435" on="1"/>
        <pt x="680" y="1197" on="1"/>
        <pt x="325" y="653" on="1"/>
        <pt x="328" y="137" on="1"/>
        <pt x="473" y="279" on="1"/>
        <pt x="473" y="700" on="1"/>
        <pt x="711" y="1049" on="1"/>
        <pt x="711" y="162" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 28 values pushed */
          14 13 12 11 10 9 8 1 0 9 0 73 0 0 0 1 95 0 1 1 14 0 78 33 34
          2 7 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="a" xMin="0" yMin="-429" xMax="833" yMax="1435">
      <contour>
        <pt x="595" y="-429" on="1"/>
        <pt x="595" y="488" on="1"/>
        <pt x="328" y="488" on="1"/>
        <pt x="238" y="252" on="1"/>
        <pt x="238" y="39" on="1"/>
        <pt x="3" y="-163" on="1"/>
        <pt x="0" y="-163" on="1"/>
        <pt x="0" y="252" on="1"/>
        <pt x="90" y="481" on="1"/>
        <pt x="0" y="723" on="1"/>
        <pt x="180" y="723" on="1"/>
        <pt x="356" y="1191" on="1"/>
        <pt x="297" y="1435" on="1"/>
        <pt x="833" y="1435" on="1"/>
        <pt x="833" y="-107" on="1"/>
      </contour>
      <contour>
        <pt x="595" y="723" on="1"/>
        <pt x="592" y="1194" on="1"/>
        <pt x="418" y="723" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 44 values pushed */
          16 11 2 1 2 1 76 14 8 7 5 4 3 0 7 0 73 4 3 2 1 0 0 1 0
          100 0 2 2 14 2 78 15 15 15 17 15 17 18 23 17 5 7 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="b" xMin="0" yMin="-425" xMax="796" yMax="1435">
      <contour>
        <pt x="86" y="-425" on="1"/>
        <pt x="86" y="794" on="1"/>
        <pt x="0" y="1019" on="1"/>
        <pt x="0" y="1022" on="1"/>
        <pt x="86" y="1022" on="1"/>
        <pt x="86" y="1049" on="1"/>
        <pt x="86" y="1114" on="0"/>
        <pt x="73" y="1216" on="0"/>
        <pt x="50" y="1304" on="0"/>
        <pt x="19" y="1387" on="0"/>
        <pt x="0" y="1432" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="679" y="1435" on="1"/>
        <pt x="679" y="1198" on="1"/>
        <pt x="531" y="963" on="1"/>
        <pt x="679" y="963" on="1"/>
        <pt x="796" y="843" on="1"/>
        <pt x="796" y="253" on="1"/>
      </contour>
      <contour>
        <pt x="324" y="1022" on="1"/>
        <pt x="330" y="1025" on="1"/>
        <pt x="426" y="1198" on="1"/>
        <pt x="426" y="1201" on="1"/>
        <pt x="327" y="1201" on="1"/>
      </contour>
      <contour>
        <pt x="324" y="139" on="1"/>
        <pt x="562" y="377" on="1"/>
        <pt x="559" y="787" on="1"/>
        <pt x="327" y="787" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 53 values pushed */
          18 13 2 0 3 16 1 2 4 2 2 76 24 23 17 0 4 4 73 0 0 3 2 3 0
          2 128 0 2 0 4 2 4 99 0 3 3 1 95 0 1 1 14 3 78 19 37 18 38 34
          5 7 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="c" xMin="0" yMin="-418" xMax="796" yMax="1439">
      <contour>
        <pt x="86" y="-418" on="1"/>
        <pt x="89" y="1205" on="1"/>
        <pt x="0" y="1436" on="1"/>
        <pt x="0" y="1439" on="1"/>
        <pt x="796" y="1439" on="1"/>
        <pt x="796" y="995" on="1"/>
        <pt x="561" y="936" on="1"/>
        <pt x="558" y="1205" on="1"/>
        <pt x="324" y="1202" on="1"/>
        <pt x="324" y="140" on="1"/>
        <pt x="561" y="378" on="1"/>
        <pt x="561" y="791" on="1"/>
        <pt x="796" y="850" on="1"/>
        <pt x="796" y="254" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 33 values pushed */
          1 1 1 0 1 76 13 12 11 10 9 6 5 0 8 1 73 0 1 1 0 95 0 0 0
          14 1 78 19 34 2 7 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="comma" xMin="78" yMin="-425" xMax="316" yMax="103">
      <contour>
        <pt x="78" y="-425" on="1"/>
        <pt x="81" y="103" on="1"/>
        <pt x="199" y="74" on="0"/>
        <pt x="316" y="44" on="1"/>
        <pt x="316" y="-225" on="1"/>
        <pt x="197" y="-325" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          1 0 1 50
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="d" xMin="0" yMin="-425" xMax="797" yMax="1435">
      <contour>
        <pt x="328" y="137" on="1"/>
        <pt x="563" y="369" on="1"/>
        <pt x="563" y="700" on="0"/>
        <pt x="559" y="1200" on="1"/>
        <pt x="328" y="1200" on="1"/>
      </contour>
      <contour>
        <pt x="87" y="-425" on="1"/>
        <pt x="90" y="1200" on="1"/>
        <pt x="0" y="1432" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="797" y="1435" on="1"/>
        <pt x="797" y="248" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 24 values pushed */
          10 6 5 1 0 5 0 73 0 0 0 1 95 0 1 1 14 0 78 35 19 2 7 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="e" xMin="0" yMin="-425" xMax="797" yMax="1435">
      <contour>
        <pt x="87" y="-425" on="1"/>
        <pt x="90" y="724" on="1"/>
        <pt x="0" y="959" on="1"/>
        <pt x="0" y="962" on="1"/>
        <pt x="90" y="962" on="1"/>
        <pt x="90" y="1197" on="1"/>
        <pt x="0" y="1432" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="797" y="1435" on="1"/>
        <pt x="791" y="1021" on="1"/>
        <pt x="563" y="962" on="1"/>
        <pt x="559" y="1200" on="1"/>
        <pt x="325" y="1197" on="1"/>
        <pt x="325" y="962" on="1"/>
        <pt x="532" y="962" on="1"/>
        <pt x="532" y="724" on="1"/>
        <pt x="325" y="724" on="1"/>
        <pt x="325" y="134" on="1"/>
        <pt x="563" y="372" on="1"/>
        <pt x="566" y="669" on="1"/>
        <pt x="797" y="724" on="1"/>
        <pt x="797" y="248" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 45 values pushed */
          10 9 5 3 0 2 1 76 21 20 19 18 17 1 0 7 4 73 3 1 0 0 4 0 4
          99 0 2 2 1 95 0 1 1 14 2 78 17 17 19 34 34 5 7 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="exclam" xMin="78" yMin="-425" xMax="316" yMax="1435">
      <contour>
        <pt x="81" y="252" on="1"/>
        <pt x="81" y="1435" on="1"/>
        <pt x="316" y="1435" on="1"/>
        <pt x="316" y="193" on="1"/>
        <pt x="313" y="193" on="1"/>
        <pt x="197" y="222" on="0"/>
      </contour>
      <contour>
        <pt x="78" y="-425" on="1"/>
        <pt x="81" y="103" on="1"/>
        <pt x="199" y="74" on="0"/>
        <pt x="316" y="44" on="1"/>
        <pt x="316" y="-225" on="1"/>
        <pt x="197" y="-325" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 19 values pushed */
          10 9 7 6 3 0 6 0 73 0 0 0 14 0 78 17 1 7 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="f" xMin="0" yMin="-422" xMax="796" yMax="1435">
      <contour>
        <pt x="86" y="-422" on="1"/>
        <pt x="89" y="667" on="1"/>
        <pt x="0" y="902" on="1"/>
        <pt x="0" y="905" on="1"/>
        <pt x="89" y="905" on="1"/>
        <pt x="89" y="1198" on="1"/>
        <pt x="0" y="1432" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="796" y="1435" on="1"/>
        <pt x="796" y="991" on="1"/>
        <pt x="561" y="933" on="1"/>
        <pt x="558" y="1201" on="1"/>
        <pt x="324" y="1198" on="1"/>
        <pt x="324" y="905" on="1"/>
        <pt x="531" y="905" on="1"/>
        <pt x="531" y="667" on="1"/>
        <pt x="324" y="667" on="1"/>
        <pt x="324" y="-221" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 41 values pushed */
          10 9 5 3 0 2 1 76 17 1 0 3 4 73 3 1 0 0 4 0 4 99 0 2 2
          1 95 0 1 1 14 2 78 17 17 19 34 34 5 7 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="g" xMin="0" yMin="-429" xMax="801" yMax="1435">
      <contour>
        <pt x="90" y="-429" on="1"/>
        <pt x="90" y="1200" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="801" y="1435" on="1"/>
        <pt x="798" y="990" on="1"/>
        <pt x="563" y="931" on="1"/>
        <pt x="563" y="1200" on="1"/>
        <pt x="325" y="1197" on="1"/>
        <pt x="325" y="137" on="1"/>
        <pt x="563" y="372" on="1"/>
        <pt x="563" y="607" on="1"/>
        <pt x="467" y="607" on="1"/>
        <pt x="380" y="845" on="1"/>
        <pt x="801" y="842" on="1"/>
        <pt x="801" y="251" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 43 values pushed */
          1 1 1 0 5 4 2 3 1 2 76 14 9 8 0 4 2 73 0 3 0 2 3 2 99
          0 1 1 0 95 0 0 0 14 1 78 17 19 19 18 4 7 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="h" xMin="0" yMin="-425" xMax="886" yMax="1435">
      <contour>
        <pt x="89" y="-425" on="1"/>
        <pt x="89" y="553" on="1"/>
        <pt x="0" y="787" on="1"/>
        <pt x="89" y="787" on="1"/>
        <pt x="89" y="1201" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="324" y="1435" on="1"/>
        <pt x="327" y="784" on="1"/>
        <pt x="562" y="787" on="1"/>
        <pt x="562" y="1435" on="1"/>
        <pt x="886" y="1435" on="1"/>
        <pt x="886" y="1432" on="1"/>
        <pt x="799" y="1207" on="1"/>
        <pt x="796" y="-157" on="1"/>
        <pt x="562" y="50" on="1"/>
        <pt x="562" y="550" on="1"/>
        <pt x="324" y="550" on="1"/>
        <pt x="318" y="-228" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 41 values pushed */
          12 4 2 0 1 1 1 4 0 2 76 17 14 13 0 4 4 73 2 1 0 0 4 0 4
          99 3 1 1 1 14 1 78 21 17 17 18 18 5 7 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="i" xMin="0" yMin="-425" xMax="414" yMax="1435">
      <contour>
        <pt x="89" y="-425" on="1"/>
        <pt x="89" y="1201" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="414" y="1435" on="1"/>
        <pt x="414" y="1432" on="1"/>
        <pt x="324" y="1198" on="1"/>
        <pt x="324" y="1198" on="0"/>
        <pt x="318" y="-228" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 17 values pushed */
          7 5 1 0 4 0 73 0 0 0 14 0 78 18 1 7 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="j" xMin="48" yMin="-422" xMax="756" yMax="1435">
      <contour>
        <pt x="756" y="-422" on="1"/>
        <pt x="48" y="259" on="1"/>
        <pt x="48" y="727" on="1"/>
        <pt x="285" y="669" on="1"/>
        <pt x="282" y="376" on="1"/>
        <pt x="519" y="142" on="1"/>
        <pt x="519" y="1204" on="1"/>
        <pt x="433" y="1435" on="1"/>
        <pt x="756" y="1435" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 20 values pushed */
          6 5 4 3 2 1 0 7 0 73 0 0 0 14 0 78 23 1 7 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="k" xMin="0" yMin="-422" xMax="827" yMax="1435">
      <contour>
        <pt x="86" y="-422" on="1"/>
        <pt x="89" y="784" on="1"/>
        <pt x="0" y="1019" on="1"/>
        <pt x="0" y="1022" on="1"/>
        <pt x="89" y="1025" on="1"/>
        <pt x="89" y="1198" on="1"/>
        <pt x="0" y="1432" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="324" y="1435" on="1"/>
        <pt x="327" y="1022" on="1"/>
        <pt x="558" y="1435" on="1"/>
        <pt x="827" y="1435" on="1"/>
        <pt x="534" y="963" on="1"/>
        <pt x="679" y="963" on="1"/>
        <pt x="796" y="846" on="1"/>
        <pt x="796" y="164" on="1"/>
        <pt x="561" y="-39" on="1"/>
        <pt x="558" y="788" on="1"/>
        <pt x="324" y="784" on="1"/>
        <pt x="324" y="-221" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 53 values pushed */
          5 1 0 1 14 1 4 3 2 76 9 1 0 1 75 19 16 15 1 0 5 4 73 0 0
          1 3 1 0 3 128 0 3 0 4 3 4 99 2 1 1 1 14 1 78 20 17 18 34 34
          5 7 27
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="l" xMin="0" yMin="-422" xMax="798" yMax="1435">
      <contour>
        <pt x="89" y="-422" on="1"/>
        <pt x="89" y="1204" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="326" y="1435" on="1"/>
        <pt x="326" y="142" on="1"/>
        <pt x="561" y="376" on="1"/>
        <pt x="564" y="672" on="1"/>
        <pt x="798" y="727" on="1"/>
        <pt x="798" y="256" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 20 values pushed */
          8 7 6 5 4 1 0 7 0 73 0 0 0 14 0 78 18 1 7 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="m" xMin="0" yMin="-429" xMax="1243" yMax="1435">
      <contour>
        <pt x="90" y="-429" on="1"/>
        <pt x="90" y="1200" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="504" y="1435" on="1"/>
        <pt x="424" y="1265" on="1"/>
        <pt x="618" y="724" on="1"/>
        <pt x="822" y="1259" on="1"/>
        <pt x="742" y="1432" on="1"/>
        <pt x="742" y="1435" on="1"/>
        <pt x="1243" y="1435" on="1"/>
        <pt x="1243" y="1432" on="1"/>
        <pt x="1156" y="1207" on="1"/>
        <pt x="1153" y="-426" on="1"/>
        <pt x="918" y="-219" on="1"/>
        <pt x="915" y="873" on="1"/>
        <pt x="625" y="106" on="1"/>
        <pt x="325" y="879" on="1"/>
        <pt x="325" y="-225" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 27 values pushed */
          17 16 15 14 13 12 11 6 5 4 1 0 12 0 73 1 1 0 0 14 0 78 36 18 2
          7 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="n" xMin="0" yMin="-425" xMax="977" yMax="1435">
      <contour>
        <pt x="884" y="-425" on="1"/>
        <pt x="833" y="-376" on="0"/>
        <pt x="669" y="-238" on="0"/>
        <pt x="652" y="-225" on="1"/>
        <pt x="652" y="51" on="1"/>
        <pt x="328" y="894" on="1"/>
        <pt x="325" y="894" on="1"/>
        <pt x="325" y="-225" on="1"/>
        <pt x="90" y="-425" on="1"/>
        <pt x="90" y="1200" on="1"/>
        <pt x="0" y="1432" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="504" y="1435" on="1"/>
        <pt x="420" y="1256" on="1"/>
        <pt x="652" y="650" on="1"/>
        <pt x="652" y="1435" on="1"/>
        <pt x="977" y="1435" on="1"/>
        <pt x="887" y="1200" on="1"/>
        <pt x="887" y="77" on="0"/>
        <pt x="886" y="-113" on="0"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 25 values pushed */
          17 14 13 9 8 7 5 4 3 0 10 0 73 1 1 0 0 14 0 78 19 42 2 7 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="o" xMin="0" yMin="-422" xMax="884" yMax="1435">
      <contour>
        <pt x="443" y="-422" on="1"/>
        <pt x="86" y="-68" on="1"/>
        <pt x="86" y="1207" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="884" y="1435" on="1"/>
        <pt x="795" y="1201" on="1"/>
        <pt x="795" y="-71" on="1"/>
      </contour>
      <contour>
        <pt x="440" y="-68" on="1"/>
        <pt x="557" y="46" on="1"/>
        <pt x="557" y="1201" on="1"/>
        <pt x="323" y="1201" on="1"/>
        <pt x="323" y="49" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 30 values pushed */
          2 1 1 0 1 76 11 8 6 5 1 5 1 73 0 1 1 0 95 0 0 0 14 1 78
          21 19 2 7 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="p" xMin="0" yMin="-422" xMax="796" yMax="1435">
      <contour>
        <pt x="89" y="-422" on="1"/>
        <pt x="89" y="433" on="1"/>
        <pt x="0" y="664" on="1"/>
        <pt x="0" y="667" on="1"/>
        <pt x="89" y="670" on="1"/>
        <pt x="89" y="1201" on="1"/>
        <pt x="0" y="1432" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="796" y="1435" on="1"/>
        <pt x="793" y="723" on="1"/>
        <pt x="324" y="433" on="1"/>
        <pt x="324" y="-221" on="1"/>
      </contour>
      <contour>
        <pt x="327" y="670" on="1"/>
        <pt x="561" y="818" on="1"/>
        <pt x="558" y="1201" on="1"/>
        <pt x="327" y="1201" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 42 values pushed */
          13 12 9 3 0 2 1 76 5 1 2 1 75 11 10 1 0 4 0 73 0 0 2 0 134
          0 2 2 1 95 0 1 1 14 2 78 22 34 34 3 7 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="period" xMin="35" yMin="3" xMax="280" yMax="181">
      <contour>
        <pt x="35" y="3" on="1"/>
        <pt x="35" y="181" on="1"/>
        <pt x="280" y="181" on="1"/>
        <pt x="280" y="3" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 27 values pushed */
          0 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 0 0 0 3 0 3 17 3
          7 23
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="q" xMin="0" yMin="-425" xMax="886" yMax="1435">
      <contour>
        <pt x="796" y="-425" on="1"/>
        <pt x="559" y="-308" on="1"/>
        <pt x="444" y="-425" on="1"/>
        <pt x="86" y="-71" on="1"/>
        <pt x="86" y="1207" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="886" y="1435" on="1"/>
        <pt x="796" y="1201" on="1"/>
      </contour>
      <contour>
        <pt x="441" y="-71" on="1"/>
        <pt x="562" y="47" on="1"/>
        <pt x="559" y="1201" on="1"/>
        <pt x="327" y="1201" on="1"/>
        <pt x="324" y="47" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 32 values pushed */
          4 1 1 0 1 76 12 9 7 3 2 1 0 7 1 73 0 1 1 0 95 0 0 0 14
          1 78 20 21 2 7 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="question" xMin="0" yMin="-425" xMax="827" yMax="1435">
      <contour>
        <pt x="352" y="195" on="1"/>
        <pt x="117" y="253" on="1"/>
        <pt x="117" y="815" on="1"/>
        <pt x="355" y="815" on="1"/>
        <pt x="589" y="963" on="1"/>
        <pt x="589" y="1201" on="1"/>
        <pt x="352" y="1198" on="1"/>
        <pt x="355" y="994" on="1"/>
        <pt x="117" y="905" on="1"/>
        <pt x="117" y="1201" on="1"/>
        <pt x="0" y="1432" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="827" y="1435" on="1"/>
        <pt x="827" y="874" on="1"/>
        <pt x="352" y="577" on="1"/>
      </contour>
      <contour>
        <pt x="117" y="-425" on="1"/>
        <pt x="117" y="105" on="1"/>
        <pt x="355" y="47" on="1"/>
        <pt x="355" y="-219" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 45 values pushed */
          9 1 1 2 13 8 7 4 4 0 1 2 76 18 17 16 15 14 1 0 7 0 73 0 0
          1 0 134 0 1 1 2 95 0 2 2 14 1 78 36 18 18 3 7 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="quotedbl" xMin="101" yMin="1108" xMax="575" yMax="1577">
      <contour>
        <pt x="197" y="1108" on="1"/>
        <pt x="167" y="1108" on="1"/>
        <pt x="105" y="1467" on="1"/>
        <pt x="101" y="1490" on="0"/>
        <pt x="101" y="1500" on="1"/>
        <pt x="101" y="1537" on="0"/>
        <pt x="142" y="1577" on="0"/>
        <pt x="181" y="1577" on="1"/>
        <pt x="220" y="1577" on="0"/>
        <pt x="263" y="1538" on="0"/>
        <pt x="263" y="1501" on="1"/>
        <pt x="263" y="1493" on="0"/>
        <pt x="259" y="1467" on="1"/>
      </contour>
      <contour>
        <pt x="509" y="1108" on="1"/>
        <pt x="479" y="1108" on="1"/>
        <pt x="417" y="1467" on="1"/>
        <pt x="413" y="1490" on="0"/>
        <pt x="413" y="1500" on="1"/>
        <pt x="413" y="1537" on="0"/>
        <pt x="454" y="1577" on="0"/>
        <pt x="493" y="1577" on="1"/>
        <pt x="532" y="1577" on="0"/>
        <pt x="575" y="1538" on="0"/>
        <pt x="575" y="1501" on="1"/>
        <pt x="575" y="1493" on="0"/>
        <pt x="571" y="1467" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 33 values pushed */
          23 10 2 0 1 1 76 3 1 1 0 0 1 89 3 1 1 1 0 95 2 1 0 1 0
          79 37 21 37 16 4 7 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="quotesingle" xMin="52" yMin="1187" xMax="290" yMax="1715">
      <contour>
        <pt x="52" y="1187" on="1"/>
        <pt x="55" y="1715" on="1"/>
        <pt x="173" y="1686" on="0"/>
        <pt x="290" y="1656" on="1"/>
        <pt x="290" y="1387" on="1"/>
        <pt x="171" y="1287" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHB[ ]	/* 4 values pushed */
          1 0 1 50
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="r" xMin="0" yMin="-422" xMax="942" yMax="1435">
      <contour>
        <pt x="853" y="-422" on="1"/>
        <pt x="616" y="-212" on="1"/>
        <pt x="619" y="521" on="1"/>
        <pt x="582" y="595" on="1"/>
        <pt x="323" y="431" on="1"/>
        <pt x="323" y="139" on="1"/>
        <pt x="86" y="-68" on="1"/>
        <pt x="86" y="438" on="1"/>
        <pt x="0" y="669" on="1"/>
        <pt x="86" y="669" on="1"/>
        <pt x="86" y="1263" on="1"/>
        <pt x="0" y="1432" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="795" y="1435" on="1"/>
        <pt x="795" y="727" on="1"/>
        <pt x="751" y="699" on="1"/>
        <pt x="942" y="699" on="1"/>
        <pt x="853" y="524" on="1"/>
      </contour>
      <contour>
        <pt x="326" y="672" on="1"/>
        <pt x="557" y="816" on="1"/>
        <pt x="557" y="1201" on="1"/>
        <pt x="323" y="1201" on="1"/>
      </contour>
      <instructions>
        <assembly>
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          17
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 24 values pushed */
            10 1 3 1 19 18 14 3 0 3 2 76 17 7 6 5 4 3 2 1 0 9 0 73
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 27 values pushed */
            10 1 3 1 19 14 2 2 3 18 1 0 2 3 76 17 7 6 5 4 3 2 1 0 9
            0 73
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          17
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            NPUSHB[ ]	/* 17 values pushed */
            2 1 0 3 0 134 0 3 3 1 95 0 1 1 14 3 78
          ELSE[ ]	/* Else */
            NPUSHB[ ]	/* 23 values pushed */
            0 2 3 0 3 2 0 128 0 0 0 132 0 3 3 1 95 0 1 1 14 3 78
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 7 values pushed */
          20 18 34 24 4 7 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="s" xMin="0" yMin="-425" xMax="917" yMax="1435">
      <contour>
        <pt x="89" y="-425" on="1"/>
        <pt x="89" y="667" on="1"/>
        <pt x="324" y="519" on="1"/>
        <pt x="327" y="139" on="1"/>
        <pt x="562" y="371" on="1"/>
        <pt x="562" y="371" on="0"/>
        <pt x="555" y="581" on="1"/>
        <pt x="89" y="877" on="1"/>
        <pt x="89" y="1201" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="917" y="1435" on="1"/>
        <pt x="799" y="1204" on="1"/>
        <pt x="799" y="877" on="1"/>
        <pt x="562" y="991" on="1"/>
        <pt x="559" y="1201" on="1"/>
        <pt x="324" y="1198" on="1"/>
        <pt x="333" y="966" on="1"/>
        <pt x="799" y="695" on="1"/>
        <pt x="799" y="253" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 38 values pushed */
          11 8 2 1 0 1 76 18 17 16 13 12 7 6 4 3 2 1 0 12 1 73 0 1 1
          0 95 0 0 0 14 1 78 20 25 2 7 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="space"/><!-- contains no outline data -->

    <TTGlyph name="t" xMin="67" yMin="-428" xMax="1073" yMax="1439">
      <contour>
        <pt x="689" y="-428" on="1"/>
        <pt x="451" y="-217" on="1"/>
        <pt x="451" y="1204" on="1"/>
        <pt x="302" y="1201" on="1"/>
        <pt x="302" y="934" on="1"/>
        <pt x="67" y="993" on="1"/>
        <pt x="67" y="1439" on="1"/>
        <pt x="1073" y="1439" on="1"/>
        <pt x="1073" y="993" on="1"/>
        <pt x="838" y="934" on="1"/>
        <pt x="835" y="1204" on="1"/>
        <pt x="689" y="1204" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 27 values pushed */
          9 8 5 4 1 0 6 0 73 2 1 0 0 1 95 0 1 1 14 0 78 19 19 18 3
          7 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="u" xMin="0" yMin="-425" xMax="798" yMax="1435">
      <contour>
        <pt x="798" y="-425" on="1"/>
        <pt x="89" y="-425" on="1"/>
        <pt x="89" y="1204" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="327" y="1435" on="1"/>
        <pt x="327" y="-185" on="1"/>
        <pt x="561" y="-185" on="1"/>
        <pt x="561" y="1435" on="1"/>
        <pt x="798" y="1435" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 30 values pushed */
          2 1 2 1 1 76 3 1 1 1 14 77 0 2 2 0 96 0 0 0 15 0 78 17 17
          18 16 4 7 26
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="v" xMin="0" yMin="-422" xMax="886" yMax="1439">
      <contour>
        <pt x="444" y="-422" on="1"/>
        <pt x="86" y="-67" on="1"/>
        <pt x="86" y="1211" on="1"/>
        <pt x="0" y="1436" on="1"/>
        <pt x="0" y="1439" on="1"/>
        <pt x="324" y="1439" on="1"/>
        <pt x="324" y="50" on="1"/>
        <pt x="441" y="-67" on="1"/>
        <pt x="562" y="50" on="1"/>
        <pt x="562" y="1439" on="1"/>
        <pt x="886" y="1439" on="1"/>
        <pt x="796" y="1205" on="1"/>
        <pt x="796" y="-70" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 22 values pushed */
          12 11 8 7 6 2 1 7 0 73 1 1 0 0 14 0 78 20 35 2 7 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="w" xMin="0" yMin="-422" xMax="1361" yMax="1439">
      <contour>
        <pt x="917" y="-422" on="1"/>
        <pt x="682" y="-188" on="1"/>
        <pt x="676" y="-188" on="1"/>
        <pt x="445" y="-422" on="1"/>
        <pt x="90" y="-67" on="1"/>
        <pt x="90" y="1208" on="1"/>
        <pt x="0" y="1439" on="1"/>
        <pt x="327" y="1439" on="1"/>
        <pt x="327" y="47" on="1"/>
        <pt x="448" y="-67" on="1"/>
        <pt x="562" y="53" on="1"/>
        <pt x="562" y="1025" on="1"/>
        <pt x="800" y="1025" on="1"/>
        <pt x="800" y="50" on="1"/>
        <pt x="917" y="-67" on="1"/>
        <pt x="1034" y="47" on="1"/>
        <pt x="1034" y="1439" on="1"/>
        <pt x="1361" y="1439" on="1"/>
        <pt x="1272" y="1208" on="1"/>
        <pt x="1272" y="-70" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 38 values pushed */
          18 5 2 1 0 1 76 19 15 14 13 10 9 8 4 3 1 10 1 73 0 1 0 1 134
          2 1 0 0 14 0 78 20 20 22 3 7 25
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="x" xMin="0" yMin="-429" xMax="887" yMax="1435">
      <contour>
        <pt x="798" y="-429" on="1"/>
        <pt x="560" y="-219" on="1"/>
        <pt x="563" y="338" on="1"/>
        <pt x="439" y="458" on="1"/>
        <pt x="325" y="338" on="1"/>
        <pt x="325" y="-222" on="1"/>
        <pt x="87" y="-429" on="1"/>
        <pt x="87" y="458" on="1"/>
        <pt x="278" y="650" on="1"/>
        <pt x="87" y="845" on="1"/>
        <pt x="87" y="1203" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="325" y="1435" on="1"/>
        <pt x="325" y="959" on="1"/>
        <pt x="442" y="845" on="1"/>
        <pt x="563" y="965" on="1"/>
        <pt x="560" y="1435" on="1"/>
        <pt x="887" y="1435" on="1"/>
        <pt x="798" y="1203" on="1"/>
        <pt x="798" y="842" on="1"/>
        <pt x="606" y="653" on="1"/>
        <pt x="798" y="461" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 33 values pushed */
          21 20 19 18 15 14 13 10 9 8 7 6 5 4 3 2 1 0 18 0 73 1 1 0 0
          14 0 78 20 27 2 7 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="y" xMin="0" yMin="-429" xMax="889" yMax="1435">
      <contour>
        <pt x="561" y="-429" on="1"/>
        <pt x="325" y="-222" on="1"/>
        <pt x="325" y="605" on="1"/>
        <pt x="87" y="844" on="1"/>
        <pt x="87" y="1206" on="1"/>
        <pt x="0" y="1432" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="325" y="1435" on="1"/>
        <pt x="325" y="962" on="1"/>
        <pt x="443" y="844" on="1"/>
        <pt x="564" y="962" on="1"/>
        <pt x="564" y="1435" on="1"/>
        <pt x="889" y="1435" on="1"/>
        <pt x="799" y="1200" on="1"/>
        <pt x="799" y="841" on="1"/>
        <pt x="564" y="605" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 26 values pushed */
          15 14 13 10 9 8 4 3 2 1 0 11 0 73 1 1 0 0 14 0 78 20 37 2 7
          24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="z" xMin="0" yMin="-425" xMax="711" yMax="1435">
      <contour>
        <pt x="87" y="-425" on="1"/>
        <pt x="87" y="697" on="1"/>
        <pt x="408" y="1197" on="1"/>
        <pt x="408" y="1200" on="1"/>
        <pt x="87" y="1200" on="1"/>
        <pt x="0" y="1432" on="1"/>
        <pt x="0" y="1435" on="1"/>
        <pt x="680" y="1435" on="1"/>
        <pt x="680" y="1197" on="1"/>
        <pt x="325" y="653" on="1"/>
        <pt x="328" y="137" on="1"/>
        <pt x="473" y="279" on="1"/>
        <pt x="473" y="700" on="1"/>
        <pt x="711" y="1049" on="1"/>
        <pt x="711" y="162" on="1"/>
      </contour>
      <instructions>
        <assembly>
          NPUSHB[ ]	/* 28 values pushed */
          14 13 12 11 10 9 8 1 0 9 0 73 0 0 0 1 95 0 1 1 14 0 78 33 34
          2 7 24
          CALL[ ]	/* CallFunction */
        </assembly>
      </instructions>
    </TTGlyph>

  </glyf>

  <name>
    <namerecord nameID="0" platformID="3" platEncID="1" langID="0x409">
      © Font Monger. 2023. All Rights Reserved
    </namerecord>
    <namerecord nameID="1" platformID="3" platEncID="1" langID="0x409">
      Death to Hair Metal
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x409">
      Regular
    </namerecord>
    <namerecord nameID="3" platformID="3" platEncID="1" langID="0x409">
      Death to Hair Metal:Version 1.000
    </namerecord>
    <namerecord nameID="4" platformID="3" platEncID="1" langID="0x409">
      Death to Hair Metal
    </namerecord>
    <namerecord nameID="5" platformID="3" platEncID="1" langID="0x409">
      Version 1.000;March 23, 2023;FontCreator 14.0.0.2901 64-bit
    </namerecord>
    <namerecord nameID="6" platformID="3" platEncID="1" langID="0x409">
      DeathtoHairMetal
    </namerecord>
    <namerecord nameID="7" platformID="3" platEncID="1" langID="0x409">
      ® Trademark of Font Monger &amp; Chris Vile Fonts
    </namerecord>
    <namerecord nameID="8" platformID="3" platEncID="1" langID="0x409">
      Font Monger
    </namerecord>
    <namerecord nameID="9" platformID="3" platEncID="1" langID="0x409">
      Chris Vile
    </namerecord>
    <namerecord nameID="10" platformID="3" platEncID="1" langID="0x409">
      This font was created using FontCreator 14.0 from High-Logic.com
    </namerecord>
    <namerecord nameID="11" platformID="3" platEncID="1" langID="0x409">
      https://www.fontmonger.com
    </namerecord>
    <namerecord nameID="12" platformID="3" platEncID="1" langID="0x409">
      https://www.chrisvile.com
    </namerecord>
    <namerecord nameID="13" platformID="3" platEncID="1" langID="0x409">
      No monetized, commercial, or business use allowed of font without a license
    </namerecord>
    <namerecord nameID="14" platformID="3" platEncID="1" langID="0x409">
      https://www.fontmonger.com
    </namerecord>
  </name>

  <post>
    <formatType value="2.0"/>
    <italicAngle value="0.0"/>
    <underlinePosition value="-102"/>
    <underlineThickness value="51"/>
    <isFixedPitch value="0"/>
    <minMemType42 value="0"/>
    <maxMemType42 value="0"/>
    <minMemType1 value="0"/>
    <maxMemType1 value="0"/>
    <psNames>
      <!-- This file uses unique glyph names based on the information
           found in the 'post' table. Since these names might not be unique,
           we have to invent artificial names in case of clashes. In order to
           be able to retain the original information, we need a name to
           ps name mapping for those cases where they differ. That's what
           you see below.
            -->
    </psNames>
    <extraNames>
      <!-- following are the name that are not taken from the standard Mac glyph order -->
    </extraNames>
  </post>

  <gasp>
    <gaspRange rangeMaxPPEM="65535" rangeGaspBehavior="15"/>
  </gasp>

  <GDEF>
    <Version value="0x00010000"/>
    <GlyphClassDef>
      <ClassDef glyph=".notdef" class="1"/>
      <ClassDef glyph="A" class="1"/>
      <ClassDef glyph="B" class="1"/>
      <ClassDef glyph="C" class="1"/>
      <ClassDef glyph="D" class="1"/>
      <ClassDef glyph="E" class="1"/>
      <ClassDef glyph="F" class="1"/>
      <ClassDef glyph="G" class="1"/>
      <ClassDef glyph="H" class="1"/>
      <ClassDef glyph="I" class="1"/>
      <ClassDef glyph="J" class="1"/>
      <ClassDef glyph="K" class="1"/>
      <ClassDef glyph="L" class="1"/>
      <ClassDef glyph="M" class="1"/>
      <ClassDef glyph="N" class="1"/>
      <ClassDef glyph="O" class="1"/>
      <ClassDef glyph="P" class="1"/>
      <ClassDef glyph="Q" class="1"/>
      <ClassDef glyph="R" class="1"/>
      <ClassDef glyph="S" class="1"/>
      <ClassDef glyph="T" class="1"/>
      <ClassDef glyph="U" class="1"/>
      <ClassDef glyph="V" class="1"/>
      <ClassDef glyph="W" class="1"/>
      <ClassDef glyph="X" class="1"/>
      <ClassDef glyph="Y" class="1"/>
      <ClassDef glyph="Z" class="1"/>
      <ClassDef glyph="a" class="1"/>
      <ClassDef glyph="b" class="1"/>
      <ClassDef glyph="c" class="1"/>
      <ClassDef glyph="comma" class="1"/>
      <ClassDef glyph="d" class="1"/>
      <ClassDef glyph="e" class="1"/>
      <ClassDef glyph="exclam" class="1"/>
      <ClassDef glyph="f" class="1"/>
      <ClassDef glyph="g" class="1"/>
      <ClassDef glyph="h" class="1"/>
      <ClassDef glyph="i" class="1"/>
      <ClassDef glyph="j" class="1"/>
      <ClassDef glyph="k" class="1"/>
      <ClassDef glyph="l" class="1"/>
      <ClassDef glyph="m" class="1"/>
      <ClassDef glyph="n" class="1"/>
      <ClassDef glyph="o" class="1"/>
      <ClassDef glyph="p" class="1"/>
      <ClassDef glyph="period" class="1"/>
      <ClassDef glyph="q" class="1"/>
      <ClassDef glyph="question" class="1"/>
      <ClassDef glyph="quotedbl" class="1"/>
      <ClassDef glyph="quotesingle" class="1"/>
      <ClassDef glyph="r" class="1"/>
      <ClassDef glyph="s" class="1"/>
      <ClassDef glyph="space" class="1"/>
      <ClassDef glyph="t" class="1"/>
      <ClassDef glyph="u" class="1"/>
      <ClassDef glyph="v" class="1"/>
      <ClassDef glyph="w" class="1"/>
      <ClassDef glyph="x" class="1"/>
      <ClassDef glyph="y" class="1"/>
      <ClassDef glyph="z" class="1"/>
    </GlyphClassDef>
  </GDEF>

  <GPOS>
    <Version value="0x00010000"/>
    <ScriptList>
      <!-- ScriptCount=1 -->
      <ScriptRecord index="0">
        <ScriptTag value="latn"/>
        <Script>
          <DefaultLangSys>
            <ReqFeatureIndex value="65535"/>
            <!-- FeatureCount=1 -->
            <FeatureIndex index="0" value="0"/>
          </DefaultLangSys>
          <!-- LangSysCount=0 -->
        </Script>
      </ScriptRecord>
    </ScriptList>
    <FeatureList>
      <!-- FeatureCount=1 -->
      <FeatureRecord index="0">
        <FeatureTag value="kern"/>
        <Feature>
          <!-- LookupCount=1 -->
          <LookupListIndex index="0" value="0"/>
        </Feature>
      </FeatureRecord>
    </FeatureList>
    <LookupList>
      <!-- LookupCount=1 -->
      <Lookup index="0">
        <LookupType value="2"/>
        <LookupFlag value="0"/>
        <!-- SubTableCount=1 -->
        <PairPos index="0" Format="2">
          <Coverage>
            <Glyph value="A"/>
            <Glyph value="B"/>
            <Glyph value="C"/>
            <Glyph value="D"/>
            <Glyph value="E"/>
            <Glyph value="F"/>
            <Glyph value="G"/>
            <Glyph value="H"/>
            <Glyph value="I"/>
            <Glyph value="J"/>
            <Glyph value="K"/>
            <Glyph value="L"/>
            <Glyph value="M"/>
            <Glyph value="N"/>
            <Glyph value="O"/>
            <Glyph value="P"/>
            <Glyph value="Q"/>
            <Glyph value="R"/>
            <Glyph value="S"/>
            <Glyph value="T"/>
            <Glyph value="U"/>
            <Glyph value="V"/>
            <Glyph value="W"/>
            <Glyph value="X"/>
            <Glyph value="Y"/>
            <Glyph value="Z"/>
            <Glyph value="a"/>
            <Glyph value="b"/>
            <Glyph value="c"/>
            <Glyph value="d"/>
            <Glyph value="e"/>
            <Glyph value="f"/>
            <Glyph value="g"/>
            <Glyph value="h"/>
            <Glyph value="i"/>
            <Glyph value="j"/>
            <Glyph value="k"/>
            <Glyph value="l"/>
            <Glyph value="m"/>
            <Glyph value="n"/>
            <Glyph value="o"/>
            <Glyph value="p"/>
            <Glyph value="q"/>
            <Glyph value="r"/>
            <Glyph value="s"/>
            <Glyph value="t"/>
            <Glyph value="u"/>
            <Glyph value="v"/>
            <Glyph value="w"/>
            <Glyph value="x"/>
            <Glyph value="y"/>
            <Glyph value="z"/>
          </Coverage>
          <ValueFormat1 value="4"/>
          <ValueFormat2 value="0"/>
          <ClassDef1>
            <ClassDef glyph="A" class="1"/>
            <ClassDef glyph="B" class="2"/>
            <ClassDef glyph="C" class="3"/>
            <ClassDef glyph="D" class="4"/>
            <ClassDef glyph="E" class="5"/>
            <ClassDef glyph="F" class="6"/>
            <ClassDef glyph="G" class="7"/>
            <ClassDef glyph="H" class="8"/>
            <ClassDef glyph="J" class="9"/>
            <ClassDef glyph="K" class="10"/>
            <ClassDef glyph="L" class="11"/>
            <ClassDef glyph="M" class="12"/>
            <ClassDef glyph="N" class="13"/>
            <ClassDef glyph="O" class="14"/>
            <ClassDef glyph="P" class="15"/>
            <ClassDef glyph="Q" class="16"/>
            <ClassDef glyph="R" class="17"/>
            <ClassDef glyph="S" class="18"/>
            <ClassDef glyph="T" class="19"/>
            <ClassDef glyph="U" class="20"/>
            <ClassDef glyph="V" class="21"/>
            <ClassDef glyph="X" class="22"/>
            <ClassDef glyph="Y" class="23"/>
            <ClassDef glyph="Z" class="24"/>
            <ClassDef glyph="a" class="25"/>
            <ClassDef glyph="b" class="26"/>
            <ClassDef glyph="c" class="27"/>
            <ClassDef glyph="d" class="28"/>
            <ClassDef glyph="e" class="29"/>
            <ClassDef glyph="f" class="30"/>
            <ClassDef glyph="g" class="31"/>
            <ClassDef glyph="h" class="32"/>
            <ClassDef glyph="i" class="33"/>
            <ClassDef glyph="j" class="34"/>
            <ClassDef glyph="k" class="35"/>
            <ClassDef glyph="l" class="36"/>
            <ClassDef glyph="m" class="37"/>
            <ClassDef glyph="n" class="38"/>
            <ClassDef glyph="o" class="39"/>
            <ClassDef glyph="p" class="40"/>
            <ClassDef glyph="q" class="41"/>
            <ClassDef glyph="r" class="42"/>
            <ClassDef glyph="s" class="43"/>
            <ClassDef glyph="t" class="44"/>
            <ClassDef glyph="u" class="45"/>
            <ClassDef glyph="v" class="46"/>
            <ClassDef glyph="w" class="33"/>
            <ClassDef glyph="x" class="47"/>
            <ClassDef glyph="y" class="48"/>
            <ClassDef glyph="z" class="49"/>
          </ClassDef1>
          <ClassDef2>
            <ClassDef glyph="A" class="1"/>
            <ClassDef glyph="B" class="2"/>
            <ClassDef glyph="C" class="2"/>
            <ClassDef glyph="D" class="2"/>
            <ClassDef glyph="E" class="2"/>
            <ClassDef glyph="F" class="2"/>
            <ClassDef glyph="G" class="3"/>
            <ClassDef glyph="H" class="2"/>
            <ClassDef glyph="I" class="2"/>
            <ClassDef glyph="J" class="4"/>
            <ClassDef glyph="K" class="2"/>
            <ClassDef glyph="L" class="2"/>
            <ClassDef glyph="M" class="3"/>
            <ClassDef glyph="N" class="2"/>
            <ClassDef glyph="O" class="2"/>
            <ClassDef glyph="P" class="5"/>
            <ClassDef glyph="Q" class="2"/>
            <ClassDef glyph="R" class="2"/>
            <ClassDef glyph="S" class="2"/>
            <ClassDef glyph="T" class="6"/>
            <ClassDef glyph="U" class="2"/>
            <ClassDef glyph="V" class="2"/>
            <ClassDef glyph="W" class="2"/>
            <ClassDef glyph="X" class="2"/>
            <ClassDef glyph="Y" class="7"/>
            <ClassDef glyph="Z" class="2"/>
            <ClassDef glyph="a" class="8"/>
            <ClassDef glyph="b" class="9"/>
            <ClassDef glyph="c" class="9"/>
            <ClassDef glyph="d" class="9"/>
            <ClassDef glyph="e" class="9"/>
            <ClassDef glyph="f" class="9"/>
            <ClassDef glyph="g" class="10"/>
            <ClassDef glyph="h" class="9"/>
            <ClassDef glyph="i" class="9"/>
            <ClassDef glyph="j" class="11"/>
            <ClassDef glyph="k" class="9"/>
            <ClassDef glyph="l" class="9"/>
            <ClassDef glyph="m" class="10"/>
            <ClassDef glyph="n" class="9"/>
            <ClassDef glyph="o" class="9"/>
            <ClassDef glyph="p" class="12"/>
            <ClassDef glyph="q" class="9"/>
            <ClassDef glyph="r" class="9"/>
            <ClassDef glyph="s" class="9"/>
            <ClassDef glyph="t" class="13"/>
            <ClassDef glyph="u" class="9"/>
            <ClassDef glyph="v" class="9"/>
            <ClassDef glyph="w" class="9"/>
            <ClassDef glyph="x" class="9"/>
            <ClassDef glyph="y" class="14"/>
            <ClassDef glyph="z" class="9"/>
          </ClassDef2>
          <!-- Class1Count=50 -->
          <!-- Class2Count=15 -->
          <Class1Record index="0">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="14"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="61"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="31"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-33"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="61"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-41"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="26"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="14"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="61"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="31"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-33"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="61"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-41"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="26"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="1">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="41"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="18"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-5"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="18"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-18"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-34"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="41"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="18"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-5"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="18"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-18"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-34"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="2">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-24"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="-54"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="-66"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-19"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="-40"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-184"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-140"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-24"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="-54"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="-66"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-19"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="-40"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-184"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-140"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="3">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-4"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="-2"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="-12"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="5"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="-5"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-18"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-35"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-4"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="-2"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="-12"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="5"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="-5"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-18"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-35"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="4">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-30"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="-29"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="-43"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-27"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="-30"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-45"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-60"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-30"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="-29"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="-43"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-27"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="-30"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-45"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-60"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="5">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-7"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="-10"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="-16"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="4"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="-9"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-11"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-41"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-7"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="-10"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="-16"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="4"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="-9"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-11"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-41"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="6">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-258"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="-12"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="-35"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-306"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="-31"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="1"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-32"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-258"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="-12"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="-35"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-306"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="-31"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="1"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-32"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="7">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-4"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="-6"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="-16"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="5"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="-9"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-32"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-43"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-4"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="-6"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="-16"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="5"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="-9"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-32"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-43"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="8">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="37"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="94"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="55"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-10"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="95"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-17"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="49"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="37"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="94"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="55"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-10"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="95"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-17"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="49"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="9">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="33"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="10"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="1"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-18"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="10"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-32"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-47"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="33"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="10"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="1"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-18"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="10"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-32"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-47"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="10">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-11"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="-21"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="-27"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-19"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="-12"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-134"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-79"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-11"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="-21"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="-27"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-19"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="-12"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-134"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-79"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="11">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-29"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="-67"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="-79"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-17"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="-57"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-354"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-287"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-29"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="-67"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="-79"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-17"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="-57"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-354"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-287"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="12">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-1"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="67"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="15"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-52"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="67"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-60"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="7"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-1"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="67"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="15"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-52"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="67"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-60"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="7"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="13">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-8"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="43"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="61"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-59"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="52"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-68"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-6"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-8"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="43"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="61"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-59"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="52"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-68"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-6"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="14">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-14"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="43"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="8"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-56"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="44"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-65"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="3"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-14"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="43"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="8"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-56"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="44"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-65"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="3"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="15">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-176"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="-19"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="-41"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-322"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="-32"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-24"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-40"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-176"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="-19"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="-41"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-322"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="-32"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-24"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-40"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="16">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="3"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="71"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="19"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-48"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="71"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-55"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-17"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="3"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="71"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="19"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-48"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="71"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-55"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-17"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="17">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="27"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="-9"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="-18"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-16"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="46"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-102"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-113"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="27"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="-9"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="-18"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-16"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="46"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-102"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-113"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="18">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-75"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="-15"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="-13"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-73"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="-13"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-71"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-74"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-75"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="-15"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="-13"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-73"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="-13"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-71"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-74"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="19">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-293"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="-56"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="-79"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-345"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="-75"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-43"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-75"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-293"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="-56"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="-79"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-345"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="-75"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-43"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-75"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="20">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="22"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="-8"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-28"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-42"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-57"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="22"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="-8"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-28"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-42"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-57"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="21">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="11"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="69"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="34"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-32"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="70"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-39"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="29"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="11"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="69"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="34"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-32"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="70"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-39"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="29"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="22">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-11"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="62"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="22"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-85"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="72"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-48"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="17"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-11"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="62"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="22"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-85"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="72"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-48"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="17"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="23">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-157"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="-10"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="10"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-247"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="24"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-44"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-30"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-157"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="-10"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="10"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-247"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="24"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-44"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-30"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="24">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="5"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="-6"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="-28"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-3"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="-5"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-68"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-59"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="5"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="-6"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="-28"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-3"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="-5"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-68"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-59"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="25">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="41"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="18"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-5"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="18"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-18"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-34"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="41"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="18"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-5"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="18"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-18"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-34"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="26">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-24"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="-54"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="-66"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-19"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="-40"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-184"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-140"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-24"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="-54"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="-66"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-19"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="-40"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-184"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-140"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="27">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-4"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="-2"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="-12"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="5"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="-5"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-18"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-35"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-4"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="-2"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="-12"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="5"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="-5"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-18"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-35"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="28">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-30"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="-29"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="-43"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-27"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="-30"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-45"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-60"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-30"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="-29"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="-43"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-27"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="-30"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-45"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-60"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="29">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-7"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="-10"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="-16"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="4"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="-9"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-11"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-41"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-7"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="-10"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="-16"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="4"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="-9"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-11"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-41"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="30">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-258"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="-12"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="-35"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-306"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="-31"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="1"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-32"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-258"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="-12"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="-35"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-306"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="-31"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="1"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-32"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="31">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-4"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="-6"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="-16"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="5"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="-9"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-32"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-43"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-4"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="-6"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="-16"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="5"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="-9"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-32"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-43"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="32">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="37"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="94"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="55"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-10"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="95"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-17"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="49"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="37"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="94"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="55"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-10"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="95"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-17"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="49"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="33">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="14"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="61"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="31"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-33"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="61"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-41"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="26"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="14"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="61"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="31"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-33"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="61"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-41"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="26"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="34">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="33"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="10"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="1"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-18"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="10"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-32"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-47"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="33"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="10"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="1"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-18"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="10"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-32"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-47"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="35">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-11"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="-21"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="-27"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-19"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="-12"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-134"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-79"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-11"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="-21"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="-27"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-19"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="-12"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-134"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-79"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="36">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-29"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="-67"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="-79"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-17"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="-57"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-354"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-287"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-29"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="-67"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="-79"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-17"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="-57"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-354"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-287"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="37">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-1"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="67"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="15"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-52"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="67"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-60"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="7"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-1"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="67"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="15"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-52"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="67"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-60"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="7"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="38">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-8"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="43"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="61"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-59"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="52"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-68"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-6"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-8"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="43"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="61"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-59"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="52"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-68"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-6"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="39">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-14"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="43"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="8"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-56"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="44"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-65"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="3"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-14"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="43"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="8"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-56"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="44"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-65"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="3"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="40">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-176"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="-19"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="-41"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-322"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="-32"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-24"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-40"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-176"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="-19"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="-41"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-322"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="-32"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-24"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-40"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="41">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="3"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="71"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="19"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-48"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="71"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-55"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-17"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="3"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="71"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="19"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-48"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="71"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-55"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-17"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="42">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="27"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="-9"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="-18"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-16"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="46"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-102"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-113"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="27"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="-9"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="-18"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-16"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="46"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-102"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-113"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="43">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-75"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="-15"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="-13"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-73"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="-13"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-71"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-74"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-75"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="-15"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="-13"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-73"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="-13"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-71"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-74"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="44">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-293"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="-56"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="-79"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-345"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="-75"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-43"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-75"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-293"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="-56"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="-79"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-345"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="-75"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-43"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-75"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="45">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="22"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="-8"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-28"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-42"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-57"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="22"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="-8"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-28"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-42"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-57"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="46">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="11"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="69"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="34"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-32"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="70"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-39"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="29"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="11"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="69"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="34"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-32"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="70"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-39"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="29"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="47">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-11"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="62"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="22"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-85"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="72"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-48"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="17"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-11"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="62"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="22"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-85"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="72"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-48"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="17"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="48">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="-157"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="-10"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="10"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-247"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="24"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-44"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-30"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="-157"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="-10"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="10"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-247"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="24"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-44"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-30"/>
            </Class2Record>
          </Class1Record>
          <Class1Record index="49">
            <Class2Record index="0">
              <Value1 XAdvance="0"/>
            </Class2Record>
            <Class2Record index="1">
              <Value1 XAdvance="5"/>
            </Class2Record>
            <Class2Record index="2">
              <Value1 XAdvance="-6"/>
            </Class2Record>
            <Class2Record index="3">
              <Value1 XAdvance="-28"/>
            </Class2Record>
            <Class2Record index="4">
              <Value1 XAdvance="-3"/>
            </Class2Record>
            <Class2Record index="5">
              <Value1 XAdvance="-5"/>
            </Class2Record>
            <Class2Record index="6">
              <Value1 XAdvance="-68"/>
            </Class2Record>
            <Class2Record index="7">
              <Value1 XAdvance="-59"/>
            </Class2Record>
            <Class2Record index="8">
              <Value1 XAdvance="5"/>
            </Class2Record>
            <Class2Record index="9">
              <Value1 XAdvance="-6"/>
            </Class2Record>
            <Class2Record index="10">
              <Value1 XAdvance="-28"/>
            </Class2Record>
            <Class2Record index="11">
              <Value1 XAdvance="-3"/>
            </Class2Record>
            <Class2Record index="12">
              <Value1 XAdvance="-5"/>
            </Class2Record>
            <Class2Record index="13">
              <Value1 XAdvance="-68"/>
            </Class2Record>
            <Class2Record index="14">
              <Value1 XAdvance="-59"/>
            </Class2Record>
          </Class1Record>
        </PairPos>
      </Lookup>
    </LookupList>
  </GPOS>

</ttFont>
